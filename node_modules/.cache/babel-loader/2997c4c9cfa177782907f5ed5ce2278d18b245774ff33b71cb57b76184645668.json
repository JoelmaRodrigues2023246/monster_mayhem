{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-3614b62c\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"game\"\n};\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h1\", null, \"Game\", -1 /* HOISTED */);\n});\nvar _hoisted_3 = {\n  key: 0\n};\nvar _hoisted_4 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    \"class\": \"board\"\n  }, [/*#__PURE__*/_createCommentVNode(\" Exibir o tabuleiro e monstros aqui \")], -1 /* HOISTED */);\n});\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, \"Game ID: \" + _toDisplayString($setup.gameId), 1 /* TEXT */), $setup.gameData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, \"Current Turn: \" + _toDisplayString($setup.gameData.turn), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.addMonster && $setup.addMonster.apply($setup, arguments);\n    })\n  }, \"Add Monster\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $setup.endTurn && $setup.endTurn.apply($setup, arguments);\n    })\n  }, \"End Turn\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","key","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$setup","gameId","gameData","_hoisted_3","turn","_hoisted_4","onClick","_cache","addMonster","apply","arguments","endTurn"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\views\\Game.vue"],"sourcesContent":["<!-- src/views/Game.vue -->\r\n<!-- This is the page where the game logic will be implemented. -->\r\n\r\n<template>\r\n  <div class=\"game\">\r\n    <h1>Game</h1>\r\n    <p>Game ID: {{ gameId }}</p>\r\n    <div v-if=\"gameData\">\r\n      <p>Current Turn: {{ gameData.turn }}</p>\r\n      <div class=\"board\">\r\n        <!-- Exibir o tabuleiro e monstros aqui -->\r\n      </div>\r\n      <button @click=\"addMonster\">Add Monster</button>\r\n      <button @click=\"endTurn\">End Turn</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { db } from '../services/firebaseConfig';\r\nimport { doc, getDoc, updateDoc, onSnapshot } from 'firebase/firestore';\r\n\r\nexport default {\r\n  name: 'Game',\r\n  setup() {\r\n    const route = useRoute();\r\n    const gameId = ref(route.params.id);\r\n    const gameData = ref(null);\r\n    const currentPlayer = ref(null);\r\n\r\n    const loadGame = async () => {\r\n      const gameRef = doc(db, 'games', gameId.value);\r\n      const gameSnap = await getDoc(gameRef);\r\n      if (gameSnap.exists()) {\r\n        gameData.value = gameSnap.data();\r\n      } else {\r\n        console.error('No such game!');\r\n      }\r\n    };\r\n\r\n    const addMonster = async () => {\r\n      // Lógica para adicionar um monstro\r\n      const newState = { ...gameData.value.state }; // Atualize o estado do jogo\r\n      // Exemplo de adição de monstro\r\n      newState.monsters.push({ type: 'vampire', position: [0, 0] });\r\n      await updateDoc(doc(db, 'games', gameId.value), { state: newState });\r\n    };\r\n\r\n    const endTurn = async () => {\r\n      // Lógica para finalizar o turno\r\n      const nextTurn = getNextTurn(gameData.value.players, gameData.value.turn);\r\n      await updateDoc(doc(db, 'games', gameId.value), { turn: nextTurn });\r\n    };\r\n\r\n    const getNextTurn = (players, currentTurn) => {\r\n      const currentIndex = players.indexOf(currentTurn);\r\n      return players[(currentIndex + 1) % players.length];\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadGame();\r\n      const gameRef = doc(db, 'games', gameId.value);\r\n      onSnapshot(gameRef, (doc) => {\r\n        if (doc.exists()) {\r\n          gameData.value = doc.data();\r\n        }\r\n      });\r\n    });\r\n\r\n    return {\r\n      gameId,\r\n      gameData,\r\n      addMonster,\r\n      endTurn,\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles for the game page */\r\n.game {\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n.game h1 {\r\n  font-size: 2.5em;\r\n  margin-bottom: 20px;\r\n}\r\n.game p {\r\n  font-size: 1.2em;\r\n  margin-bottom: 20px;\r\n}\r\n.board {\r\n  /* Styles for the game board */\r\n}\r\n</style>\r\n"],"mappings":";;;;;EAIO,SAAM;AAAM;;sBACfA,mBAAA,CAAa,YAAT,MAAI;AAAA;;EALZC,GAAA;AAAA;;sBASMD,mBAAA,CAEM;IAFD,SAAM;EAAO,I,aAChBE,mBAAA,wCAA2C,C;;;uBANjDC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAAa,EACbL,mBAAA,CAA4B,WAAzB,WAAS,GAAAM,gBAAA,CAAGC,MAAA,CAAAC,MAAM,kBACVD,MAAA,CAAAE,QAAQ,I,cAAnBN,mBAAA,CAOM,OAdVO,UAAA,GAQMV,mBAAA,CAAwC,WAArC,gBAAc,GAAAM,gBAAA,CAAGC,MAAA,CAAAE,QAAQ,CAACE,IAAI,kBACjCC,UAEM,EACNZ,mBAAA,CAAgD;IAAvCa,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEP,MAAA,CAAAQ,UAAA,IAAAR,MAAA,CAAAQ,UAAA,CAAAC,KAAA,CAAAT,MAAA,EAAAU,SAAA,CAAU;IAAA;KAAE,aAAW,GACvCjB,mBAAA,CAA0C;IAAjCa,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEP,MAAA,CAAAW,OAAA,IAAAX,MAAA,CAAAW,OAAA,CAAAF,KAAA,CAAAT,MAAA,EAAAU,SAAA,CAAO;IAAA;KAAE,UAAQ,E,KAbvCf,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}