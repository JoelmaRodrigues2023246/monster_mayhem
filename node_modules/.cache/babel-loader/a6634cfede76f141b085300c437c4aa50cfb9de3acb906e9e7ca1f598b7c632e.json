{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-4db471e8\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h1\", null, \"Lobby\", -1 /* HOISTED */);\n});\nvar _hoisted_2 = {\n  key: 0\n};\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"Players:\", -1 /* HOISTED */);\n});\nvar _hoisted_4 = {\n  key: 1\n};\nvar _hoisted_5 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"Loading lobby...\", -1 /* HOISTED */);\n});\nvar _hoisted_6 = [_hoisted_5];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $setup.lobby ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"Host: \" + _toDisplayString($setup.lobby.host), 1 /* TEXT */), _hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.lobby.players, function (player) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: player\n    }, _toDisplayString(player), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), $setup.isHost ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.startGame && $setup.startGame.apply($setup, arguments);\n    })\n  }, \"Start Game\")) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [].concat(_hoisted_6)))]);\n}","map":{"version":3,"names":["_createElementVNode","key","_hoisted_5","_createElementBlock","_hoisted_1","$setup","lobby","_hoisted_2","_toDisplayString","host","_hoisted_3","_Fragment","_renderList","players","player","isHost","onClick","_cache","startGame","apply","arguments","_createCommentVNode","_hoisted_4","concat","_hoisted_6"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\views\\Lobby.vue"],"sourcesContent":["<!-- src/views/Lobby.vue -->\r\n<template>\r\n  <div>\r\n    <h1>Lobby</h1>\r\n    <div v-if=\"lobby\">\r\n      <p>Host: {{ lobby.host }}</p>\r\n      <p>Players:</p>\r\n      <ul>\r\n        <li v-for=\"player in lobby.players\" :key=\"player\">{{ player }}</li>\r\n      </ul>\r\n      <button v-if=\"isHost\" @click=\"startGame\">Start Game</button>\r\n    </div>\r\n    <div v-else>\r\n      <p>Loading lobby...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { db } from '../services/firebaseConfig';\r\nimport { doc, getDoc, updateDoc, arrayUnion, collection, addDoc } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nexport default {\r\n  name: 'Lobby',\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    const auth = getAuth();\r\n    const lobbyId = route.params.id;\r\n    const lobby = ref(null);\r\n    const isHost = ref(false);\r\n\r\n    const loadLobby = async () => {\r\n      const lobbyRef = doc(db, 'lobbies', lobbyId);\r\n      const lobbySnap = await getDoc(lobbyRef);\r\n\r\n      if (lobbySnap.exists()) {\r\n        lobby.value = lobbySnap.data();\r\n\r\n        // Check if the current user is the host\r\n        isHost.value = auth.currentUser.uid === lobby.value.host;\r\n\r\n        // Add the current player to the lobby if not already added\r\n        if (!lobby.value.players.includes(auth.currentUser.uid)) {\r\n          await updateDoc(lobbyRef, {\r\n            players: arrayUnion(auth.currentUser.uid)\r\n          });\r\n          lobby.value.players.push(auth.currentUser.uid);\r\n        }\r\n      }\r\n    };\r\n\r\n    const startGame = async () => {\r\n      const gameRef = await addDoc(collection(db, 'games'), {\r\n        host: lobby.value.host,\r\n        players: lobby.value.players,\r\n        state: {}, // Initial game state\r\n        turn: lobby.value.players[0]\r\n      });\r\n\r\n      const lobbyRef = doc(db, 'lobbies', lobbyId);\r\n      await updateDoc(lobbyRef, {\r\n        status: 'in-game',\r\n        gameId: gameRef.id\r\n      });\r\n\r\n      router.push(`/game/${gameRef.id}`);\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadLobby();\r\n    });\r\n\r\n    return {\r\n      lobby,\r\n      isHost,\r\n      startGame\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles for the lobby page */\r\n</style>"],"mappings":";;;;;sBAGIA,mBAAA,CAAc,YAAV,OAAK;AAAA;;EAHbC,GAAA;AAAA;;sBAMMD,mBAAA,CAAe,WAAZ,UAAQ;AAAA;;EANjBC,GAAA;AAAA;;sBAaMD,mBAAA,CAAuB,WAApB,kBAAgB;AAAA;kBAAnBE,UAAuB,C;;uBAX3BC,mBAAA,CAaM,cAZJC,UAAc,EACHC,MAAA,CAAAC,KAAK,I,cAAhBH,mBAAA,CAOM,OAXVI,UAAA,GAKMP,mBAAA,CAA6B,WAA1B,QAAM,GAAAQ,gBAAA,CAAGH,MAAA,CAAAC,KAAK,CAACG,IAAI,kBACtBC,UAAe,EACfV,mBAAA,CAEK,c,kBADHG,mBAAA,CAAmEQ,SAAA,QAR3EC,WAAA,CAQ6BP,MAAA,CAAAC,KAAK,CAACO,OAAO,EAR1C,UAQmBC,MAAM;yBAAjBX,mBAAA,CAAmE;MAA9BF,GAAG,EAAEa;IAAM,GAAAN,gBAAA,CAAKM,MAAM;oCAE/CT,MAAA,CAAAU,MAAM,I,cAApBZ,mBAAA,CAA4D;IAVlEF,GAAA;IAU6Be,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEZ,MAAA,CAAAa,SAAA,IAAAb,MAAA,CAAAa,SAAA,CAAAC,KAAA,CAAAd,MAAA,EAAAe,SAAA,CAAS;IAAA;KAAE,YAAU,KAVzDC,mBAAA,e,oBAYIlB,mBAAA,CAEM,OAdVmB,UAAA,KAAAC,MAAA,CAAAC,UAAA,I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}