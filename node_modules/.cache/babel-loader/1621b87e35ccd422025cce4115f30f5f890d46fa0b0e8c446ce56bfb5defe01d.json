{"ast":null,"code":"function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { db } from '../services/firebaseConfig';\nimport { doc, onSnapshot, arrayUnion, updateDoc, addDoc, collection } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { updateLobby, getUserNicknameById } from '../services/firebaseService';\nexport default {\n  name: 'Lobby',\n  setup: function setup() {\n    var route = useRoute();\n    var router = useRouter();\n    var auth = getAuth();\n    var lobbyId = route.params.id;\n    var lobby = ref(null);\n    var isHost = ref(false);\n    var hostNickname = ref('');\n    var playerNicknames = ref([]);\n    var loadLobby = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var lobbyRef;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              lobbyRef = doc(db, 'lobbies', lobbyId);\n              onSnapshot(lobbyRef, /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(doc) {\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!doc.exists()) {\n                          _context.next = 20;\n                          break;\n                        }\n                        lobby.value = doc.data();\n\n                        // Check if the current user is the host\n                        isHost.value = auth.currentUser.uid === lobby.value.host;\n\n                        // Fetch nicknames for the host and players\n                        _context.next = 5;\n                        return getUserNicknameById(lobby.value.host);\n                      case 5:\n                        hostNickname.value = _context.sent;\n                        _context.next = 8;\n                        return Promise.all(lobby.value.players.map(function (playerId) {\n                          return getUserNicknameById(playerId);\n                        }));\n                      case 8:\n                        playerNicknames.value = _context.sent;\n                        if (lobby.value.players.includes(auth.currentUser.uid)) {\n                          _context.next = 18;\n                          break;\n                        }\n                        _context.next = 12;\n                        return updateLobby(lobbyId, {\n                          players: arrayUnion(auth.currentUser.uid)\n                        });\n                      case 12:\n                        lobby.value.players.push(auth.currentUser.uid);\n                        _context.t0 = playerNicknames.value;\n                        _context.next = 16;\n                        return getUserNicknameById(auth.currentUser.uid);\n                      case 16:\n                        _context.t1 = _context.sent;\n                        _context.t0.push.call(_context.t0, _context.t1);\n                      case 18:\n                        _context.next = 22;\n                        break;\n                      case 20:\n                        alert('Lobby does not exist anymore.');\n                        router.push('/multiplayer-options');\n                      case 22:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                }));\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function loadLobby() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var startGame = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var gameRef;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(isHost.value && lobby.value.players.length === 4)) {\n                _context3.next = 9;\n                break;\n              }\n              _context3.next = 3;\n              return addDoc(collection(db, 'games'), {\n                host: lobby.value.host,\n                players: lobby.value.players,\n                state: {},\n                // Initial game state\n                turn: lobby.value.players[0]\n              });\n            case 3:\n              gameRef = _context3.sent;\n              _context3.next = 6;\n              return updateLobby(lobbyId, {\n                status: 'in-game',\n                gameId: gameRef.id\n              });\n            case 6:\n              router.push(\"/game/\".concat(gameRef.id));\n              _context3.next = 10;\n              break;\n            case 9:\n              alert('Only the host can start the game, and there must be 4 players.');\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function startGame() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var copyLobbyLink = function copyLobbyLink() {\n      var link = lobbyId;\n      navigator.clipboard.writeText(link).then(function () {\n        alert('Lobby link copied to clipboard');\n      });\n    };\n    var handleBeforeUnload = function handleBeforeUnload(event) {\n      if (isHost.value) {\n        event.preventDefault();\n        event.returnValue = '';\n      }\n    };\n    var handleLeaveLobby = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!isHost.value) {\n                _context4.next = 7;\n                break;\n              }\n              if (!confirm('If you leave, the lobby will be deleted and all players will be redirected. Do you want to proceed?')) {\n                _context4.next = 5;\n                break;\n              }\n              _context4.next = 4;\n              return deleteDoc(doc(db, 'lobbies', lobbyId));\n            case 4:\n              router.push('/multiplayer-options');\n            case 5:\n              _context4.next = 8;\n              break;\n            case 7:\n              router.push('/multiplayer-options');\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return function handleLeaveLobby() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    onMounted(function () {\n      loadLobby();\n      window.addEventListener('beforeunload', handleBeforeUnload);\n    });\n    onBeforeUnmount(function () {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    });\n    return {\n      lobby: lobby,\n      isHost: isHost,\n      hostNickname: hostNickname,\n      playerNicknames: playerNicknames,\n      startGame: startGame,\n      copyLobbyLink: copyLobbyLink,\n      handleLeaveLobby: handleLeaveLobby\n    };\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    var auth = getAuth();\n    var isHost = auth.currentUser && auth.currentUser.uid === this.lobby.host;\n    if (isHost) {\n      if (confirm('If you leave, the lobby will be deleted and all players will be redirected. Do you want to proceed?')) {\n        deleteDoc(doc(db, 'lobbies', this.$route.params.id)).then(function () {\n          next();\n        });\n      } else {\n        next(false);\n      }\n    } else {\n      next();\n    }\n  }\n};","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","ref","onMounted","onBeforeUnmount","useRoute","useRouter","db","doc","onSnapshot","arrayUnion","updateDoc","addDoc","collection","getAuth","updateLobby","getUserNicknameById","setup","route","router","auth","lobbyId","params","id","lobby","isHost","hostNickname","playerNicknames","loadLobby","_ref","_callee2","lobbyRef","_callee2$","_context2","_ref2","_callee","_callee$","_context","exists","data","currentUser","uid","host","all","players","map","playerId","includes","t0","t1","alert","_x","startGame","_ref3","_callee3","gameRef","_callee3$","_context3","state","turn","status","gameId","concat","copyLobbyLink","link","navigator","clipboard","writeText","handleBeforeUnload","event","preventDefault","returnValue","handleLeaveLobby","_ref4","_callee4","_callee4$","_context4","confirm","deleteDoc","window","addEventListener","removeEventListener","beforeRouteLeave","to","from","$route"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\views\\Lobby.vue"],"sourcesContent":["<template>\r\n  <div class=\"lobby\">\r\n    <h1>Lobby</h1>\r\n    <div v-if=\"lobby\">\r\n      <p>Host: {{ hostNickname }}</p>\r\n      <p>Players:</p>\r\n      <ul>\r\n        <li v-for=\"(player, index) in playerNicknames\" :key=\"index\">{{ player }}</li>\r\n      </ul>\r\n      <p v-if=\"lobby.players.length < 4\">Waiting for more players to join...</p>\r\n      <p v-else>Ready to start the game!</p>\r\n      <button v-if=\"isHost && lobby.players.length === 4\" @click=\"startGame\">Start Game</button>\r\n      <button @click=\"copyLobbyLink\">Copy Lobby Code</button>\r\n    </div>\r\n    <div v-else>\r\n      <p>Loading lobby...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { db } from '../services/firebaseConfig';\r\nimport { doc, onSnapshot, arrayUnion, updateDoc, addDoc, collection } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { updateLobby, getUserNicknameById } from '../services/firebaseService';\r\n\r\nexport default {\r\n  name: 'Lobby',\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    const auth = getAuth();\r\n    const lobbyId = route.params.id;\r\n    const lobby = ref(null);\r\n    const isHost = ref(false);\r\n    const hostNickname = ref('');\r\n    const playerNicknames = ref([]);\r\n\r\n    const loadLobby = async () => {\r\n      const lobbyRef = doc(db, 'lobbies', lobbyId);\r\n      onSnapshot(lobbyRef, async (doc) => {\r\n        if (doc.exists()) {\r\n          lobby.value = doc.data();\r\n\r\n          // Check if the current user is the host\r\n          isHost.value = auth.currentUser.uid === lobby.value.host;\r\n\r\n          // Fetch nicknames for the host and players\r\n          hostNickname.value = await getUserNicknameById(lobby.value.host);\r\n          playerNicknames.value = await Promise.all(lobby.value.players.map(playerId => getUserNicknameById(playerId)));\r\n\r\n          // Add the current player to the lobby if not already added\r\n          if (!lobby.value.players.includes(auth.currentUser.uid)) {\r\n            await updateLobby(lobbyId, {\r\n              players: arrayUnion(auth.currentUser.uid)\r\n            });\r\n            lobby.value.players.push(auth.currentUser.uid);\r\n            playerNicknames.value.push(await getUserNicknameById(auth.currentUser.uid));\r\n          }\r\n        } else {\r\n          alert('Lobby does not exist anymore.');\r\n          router.push('/multiplayer-options');\r\n        }\r\n      });\r\n    };\r\n\r\n    const startGame = async () => {\r\n      if (isHost.value && lobby.value.players.length === 4) {\r\n        const gameRef = await addDoc(collection(db, 'games'), {\r\n          host: lobby.value.host,\r\n          players: lobby.value.players,\r\n          state: {}, // Initial game state\r\n          turn: lobby.value.players[0]\r\n        });\r\n\r\n        await updateLobby(lobbyId, {\r\n          status: 'in-game',\r\n          gameId: gameRef.id\r\n        });\r\n\r\n        router.push(`/game/${gameRef.id}`);\r\n      } else {\r\n        alert('Only the host can start the game, and there must be 4 players.');\r\n      }\r\n    };\r\n\r\n    const copyLobbyLink = () => {\r\n      const link = lobbyId;\r\n      navigator.clipboard.writeText(link).then(() => {\r\n        alert('Lobby link copied to clipboard');\r\n      });\r\n    };\r\n\r\n    const handleBeforeUnload = (event) => {\r\n      if (isHost.value) {\r\n        event.preventDefault();\r\n        event.returnValue = '';\r\n      }\r\n    };\r\n\r\n    const handleLeaveLobby = async () => {\r\n      if (isHost.value) {\r\n        if (confirm('If you leave, the lobby will be deleted and all players will be redirected. Do you want to proceed?')) {\r\n          await deleteDoc(doc(db, 'lobbies', lobbyId));\r\n          router.push('/multiplayer-options');\r\n        }\r\n      } else {\r\n        router.push('/multiplayer-options');\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadLobby();\r\n      window.addEventListener('beforeunload', handleBeforeUnload);\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    });\r\n\r\n    return {\r\n      lobby,\r\n      isHost,\r\n      hostNickname,\r\n      playerNicknames,\r\n      startGame,\r\n      copyLobbyLink,\r\n      handleLeaveLobby\r\n    };\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    const auth = getAuth();\r\n    const isHost = auth.currentUser && auth.currentUser.uid === this.lobby.host;\r\n\r\n    if (isHost) {\r\n      if (confirm('If you leave, the lobby will be deleted and all players will be redirected. Do you want to proceed?')) {\r\n        deleteDoc(doc(db, 'lobbies', this.$route.params.id)).then(() => {\r\n          next();\r\n        });\r\n      } else {\r\n        next(false);\r\n      }\r\n    } else {\r\n      next();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* Styles for the lobby page */\r\n.lobby {\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n.lobby h1 {\r\n  font-size: 2.5em;\r\n  margin-bottom: 20px;\r\n}\r\n.lobby p {\r\n  font-size: 1.2em;\r\n  margin-bottom: 20px;\r\n}\r\n.lobby ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n.lobby li {\r\n  font-size: 1em;\r\n  margin: 10px 0;\r\n}\r\n.lobby button {\r\n  margin: 10px;\r\n  padding: 10px 20px;\r\n  font-size: 1em;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}