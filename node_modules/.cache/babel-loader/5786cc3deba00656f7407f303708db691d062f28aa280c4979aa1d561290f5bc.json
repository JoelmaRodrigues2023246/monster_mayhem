{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-4db471e8\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"lobby\"\n};\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h1\", null, \"Lobby\", -1 /* HOISTED */);\n});\nvar _hoisted_3 = {\n  key: 0\n};\nvar _hoisted_4 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"Players:\", -1 /* HOISTED */);\n});\nvar _hoisted_5 = {\n  key: 0\n};\nvar _hoisted_6 = {\n  key: 1\n};\nvar _hoisted_7 = {\n  key: 1\n};\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"Loading lobby...\", -1 /* HOISTED */);\n});\nvar _hoisted_9 = [_hoisted_8];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $setup.lobby ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, \"Host: \" + _toDisplayString($setup.hostNickname), 1 /* TEXT */), _hoisted_4, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.playerNicknames, function (player, index) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(player), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), $setup.lobby.players.length < 4 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"Waiting for more players to join...\")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"Ready to start the game!\")), $setup.isHost && $setup.lobby.players.length === 4 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.startGame && $setup.startGame.apply($setup, arguments);\n    })\n  }, \" Start Game \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $setup.copyLobbyLink && $setup.copyLobbyLink.apply($setup, arguments);\n    })\n  }, \"Copy Lobby Code\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [].concat(_hoisted_9)))]);\n}","map":{"version":3,"names":["_createElementVNode","key","_hoisted_8","_createElementBlock","_hoisted_1","_hoisted_2","$setup","lobby","_hoisted_3","_toDisplayString","hostNickname","_hoisted_4","_Fragment","_renderList","playerNicknames","player","index","players","length","_hoisted_5","_hoisted_6","isHost","onClick","_cache","startGame","apply","arguments","_createCommentVNode","copyLobbyLink","_hoisted_7","concat","_hoisted_9"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\views\\Lobby.vue"],"sourcesContent":["<template>\r\n  <div class=\"lobby\">\r\n    <h1>Lobby</h1>\r\n    <div v-if=\"lobby\">\r\n      <p>Host: {{ hostNickname }}</p>\r\n      <p>Players:</p>\r\n      <ul>\r\n        <li v-for=\"(player, index) in playerNicknames\" :key=\"index\">\r\n          {{ player }}\r\n        </li>\r\n      </ul>\r\n      <p v-if=\"lobby.players.length < 4\">Waiting for more players to join...</p>\r\n      <p v-else>Ready to start the game!</p>\r\n      <button v-if=\"isHost && lobby.players.length === 4\" @click=\"startGame\">\r\n        Start Game\r\n      </button>\r\n      <button @click=\"copyLobbyLink\">Copy Lobby Code</button>\r\n    </div>\r\n    <div v-else>\r\n      <p>Loading lobby...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { db } from \"../services/firebaseConfig\";\r\nimport {\r\n  doc,\r\n  onSnapshot,\r\n  arrayUnion,\r\n  updateDoc,\r\n  deleteDoc,\r\n  addDoc,\r\n  collection,\r\n} from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { updateLobby, getUserNicknameById } from \"../services/firebaseService\";\r\n\r\nexport default {\r\n  name: \"Lobby\",\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    const auth = getAuth();\r\n    const lobbyId = route.params.id;\r\n    const lobby = ref(null);\r\n    const isHost = ref(false);\r\n    const hostNickname = ref(\"\");\r\n    const playerNicknames = ref([]);\r\n\r\n    const loadLobby = async () => {\r\n      const lobbyRef = doc(db, \"lobbies\", lobbyId);\r\n      onSnapshot(lobbyRef, async (doc) => {\r\n        if (doc.exists()) {\r\n          lobby.value = doc.data();\r\n\r\n          // Check if the current user is the host\r\n          isHost.value = auth.currentUser.uid === lobby.value.host;\r\n\r\n          // Fetch nicknames for the host and players\r\n          hostNickname.value = await getUserNicknameById(lobby.value.host);\r\n          playerNicknames.value = await Promise.all(\r\n            lobby.value.players.map((playerId) => getUserNicknameById(playerId))\r\n          );\r\n\r\n          // Add the current player to the lobby if not already added\r\n          if (!lobby.value.players.includes(auth.currentUser.uid)) {\r\n            await updateLobby(lobbyId, {\r\n              players: arrayUnion(auth.currentUser.uid),\r\n            });\r\n            lobby.value.players.push(auth.currentUser.uid);\r\n            playerNicknames.value.push(\r\n              await getUserNicknameById(auth.currentUser.uid)\r\n            );\r\n          }\r\n        } else {\r\n          alert(\"Lobby does not exist anymore.\");\r\n          router.push(\"/multiplayer-options\");\r\n        }\r\n      });\r\n    };\r\n\r\n    // Start the game\r\n    const startGame = async () => {\r\n      try {\r\n        const gameRef = await addDoc(collection(db, \"games\"), {\r\n          host: lobby.value.host,\r\n          players: lobby.value.players,\r\n          state: {}, // Initial game state\r\n          turn: lobby.value.players[0],\r\n        });\r\n\r\n        await updateLobby(lobbyId, {\r\n          status: \"in-game\",\r\n          gameId: gameRef.id,\r\n        });\r\n\r\n        // Direct all players to the game page\r\n        lobby.value.players.forEach(async (playerId) => {\r\n          const playerRef = doc(db, \"users\", playerId);\r\n          await updateDoc(playerRef, {\r\n            currentGame: gameRef.id,\r\n          });\r\n        });\r\n\r\n        router.push(`/game/${gameRef.id}`);\r\n      } catch (error) {\r\n        console.error(\"Error starting game:\", error);\r\n      }\r\n    };\r\n\r\n    const copyLobbyLink = () => {\r\n      const link = lobbyId;\r\n      navigator.clipboard.writeText(link).then(() => {\r\n        alert(\"Lobby link copied to clipboard\");\r\n      });\r\n    };\r\n\r\n    const handleBeforeUnload = (event) => {\r\n      if (isHost.value) {\r\n        event.preventDefault();\r\n        event.returnValue = \"\";\r\n      }\r\n    };\r\n\r\n    const handleLeaveLobby = async () => {\r\n      if (isHost.value) {\r\n        if (\r\n          confirm(\r\n            \"If you leave, the lobby will be deleted. Do you want to proceed?\"\r\n          )\r\n        ) {\r\n          await deleteDoc(doc(db, \"lobbies\", lobbyId));\r\n          router.push(\"/multiplayer-options\");\r\n        }\r\n      } else {\r\n        router.push(\"/multiplayer-options\");\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadLobby();\r\n      window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    });\r\n\r\n    return {\r\n  lobby,\r\n  isHost,\r\n  hostNickname,\r\n  playerNicknames,\r\n  showStartButton,\r\n  startGame,\r\n  copyLobbyLink,\r\n  handleLeaveLobby\r\n};\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    const auth = getAuth();\r\n    const isHost = auth.currentUser && auth.currentUser.uid === this.lobby.host;\r\n\r\n    if (isHost) {\r\n      if (\r\n        confirm(\r\n          \"If you leave, the lobby will be deleted. Do you want to proceed?\"\r\n        )\r\n      ) {\r\n        deleteDoc(doc(db, \"lobbies\", this.$route.params.id)).then(() => {\r\n          next();\r\n        });\r\n      } else {\r\n        next(false);\r\n      }\r\n    } else {\r\n      next();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* Styles for the lobby page */\r\n.lobby {\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n.lobby h1 {\r\n  font-size: 2.5em;\r\n  margin-bottom: 20px;\r\n}\r\n.lobby p {\r\n  font-size: 1.2em;\r\n  margin-bottom: 20px;\r\n}\r\n.lobby ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n.lobby li {\r\n  font-size: 1em;\r\n  margin: 10px 0;\r\n}\r\n.lobby button {\r\n  margin: 10px;\r\n  padding: 10px 20px;\r\n  font-size: 1em;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;;;;EACO,SAAM;AAAO;;sBAChBA,mBAAA,CAAc,YAAV,OAAK;AAAA;;EAFbC,GAAA;AAAA;;sBAKMD,mBAAA,CAAe,WAAZ,UAAQ;AAAA;;EALjBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;sBAmBMD,mBAAA,CAAuB,WAApB,kBAAgB;AAAA;kBAAnBE,UAAuB,C;;uBAlB3BC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAc,EACHC,MAAA,CAAAC,KAAK,I,cAAhBJ,mBAAA,CAcM,OAjBVK,UAAA,GAIMR,mBAAA,CAA+B,WAA5B,QAAM,GAAAS,gBAAA,CAAGH,MAAA,CAAAI,YAAY,kBACxBC,UAAe,EACfX,mBAAA,CAIK,c,kBAHHG,mBAAA,CAEKS,SAAA,QATbC,WAAA,CAOsCP,MAAA,CAAAQ,eAAe,EAPrD,UAOoBC,MAAM,EAAEC,KAAK;yBAAzBb,mBAAA,CAEK;MAF2CF,GAAG,EAAEe;IAAK,GAAAP,gBAAA,CACrDM,MAAM;oCAGJT,MAAA,CAAAC,KAAK,CAACU,OAAO,CAACC,MAAM,Q,cAA7Bf,mBAAA,CAA0E,KAXhFgB,UAAA,EAWyC,qCAAmC,M,cACtEhB,mBAAA,CAAsC,KAZ5CiB,UAAA,EAYgB,0BAAwB,IACpBd,MAAA,CAAAe,MAAM,IAAIf,MAAA,CAAAC,KAAK,CAACU,OAAO,CAACC,MAAM,U,cAA5Cf,mBAAA,CAES;IAffF,GAAA;IAa2DqB,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEjB,MAAA,CAAAkB,SAAA,IAAAlB,MAAA,CAAAkB,SAAA,CAAAC,KAAA,CAAAnB,MAAA,EAAAoB,SAAA,CAAS;IAAA;KAAE,cAEvE,KAfNC,mBAAA,gBAgBM3B,mBAAA,CAAuD;IAA9CsB,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEjB,MAAA,CAAAsB,aAAA,IAAAtB,MAAA,CAAAsB,aAAA,CAAAH,KAAA,CAAAnB,MAAA,EAAAoB,SAAA,CAAa;IAAA;KAAE,iBAAe,E,oBAEhDvB,mBAAA,CAEM,OApBV0B,UAAA,KAAAC,MAAA,CAAAC,UAAA,I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}