{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport Home from '../views/Home.vue';\nimport Lobby from '../views/Lobby.vue';\nimport GameSetup from '../views/GameSetup.vue';\nimport SinglePlayerGamePlay from '../components/SinglePlayerGamePlay.vue';\nimport MultiPlayerGamePlay from '../components/MultiPlayerGamePlay.vue';\nimport Login from '../views/Login.vue';\nimport Register from '../views/Register.vue';\nimport Welcome from '../views/Welcome.vue';\nvar routes = [{\n  path: '/',\n  name: 'Welcome',\n  component: Welcome\n}, {\n  path: '/home',\n  name: 'Home',\n  component: Home,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/lobby',\n  name: 'Lobby',\n  component: Lobby,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/setup',\n  name: 'GameSetup',\n  component: GameSetup,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/singleplayer',\n  name: 'SinglePlayerGamePlay',\n  component: SinglePlayerGamePlay,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/multiplayer',\n  name: 'MultiPlayerGamePlay',\n  component: MultiPlayerGamePlay,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n}, {\n  path: '/:catchAll(.*)',\n  redirect: '/'\n} // Redireciona qualquer rota não encontrada para a página Welcome\n];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  var auth = getAuth();\n  var requiresAuth = to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  });\n  onAuthStateChanged(auth, function (user) {\n    if (requiresAuth && !user) {\n      next('/login');\n    } else if (to.path === '/' && user) {\n      next('/home');\n    } else {\n      next();\n    }\n  });\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","getAuth","onAuthStateChanged","Home","Lobby","GameSetup","SinglePlayerGamePlay","MultiPlayerGamePlay","Login","Register","Welcome","routes","path","name","component","meta","requiresAuth","redirect","router","history","process","env","BASE_URL","beforeEach","to","from","next","auth","matched","some","record","user"],"sources":["F:/CCT/2 SEMESTER/Concurrent_Systems/CA2/project-framework/monster_mayhem/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport Home from '../views/Home.vue';\nimport Lobby from '../views/Lobby.vue';\nimport GameSetup from '../views/GameSetup.vue';\nimport SinglePlayerGamePlay from '../components/SinglePlayerGamePlay.vue';\nimport MultiPlayerGamePlay from '../components/MultiPlayerGamePlay.vue';\nimport Login from '../views/Login.vue';\nimport Register from '../views/Register.vue';\nimport Welcome from '../views/Welcome.vue';\n\nconst routes = [\n  { path: '/', name: 'Welcome', component: Welcome },\n  { path: '/home', name: 'Home', component: Home, meta: { requiresAuth: true } },\n  { path: '/lobby', name: 'Lobby', component: Lobby, meta: { requiresAuth: true } },\n  { path: '/setup', name: 'GameSetup', component: GameSetup, meta: { requiresAuth: true } },\n  { path: '/singleplayer', name: 'SinglePlayerGamePlay', component: SinglePlayerGamePlay, meta: { requiresAuth: true } },\n  { path: '/multiplayer', name: 'MultiPlayerGamePlay', component: MultiPlayerGamePlay, meta: { requiresAuth: true } },\n  { path: '/login', name: 'Login', component: Login },\n  { path: '/register', name: 'Register', component: Register },\n  { path: '/:catchAll(.*)', redirect: '/' } // Redireciona qualquer rota não encontrada para a página Welcome\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nrouter.beforeEach((to, from, next) => {\n  const auth = getAuth();\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n\n  onAuthStateChanged(auth, (user) => {\n    if (requiresAuth && !user) {\n      next('/login');\n    } else if (to.path === '/' && user) {\n      next('/home');\n    } else {\n      next();\n    }\n  });\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,oBAAoB,MAAM,wCAAwC;AACzE,OAAOC,mBAAmB,MAAM,uCAAuC;AACvE,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,IAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEJ;AAAQ,CAAC,EAClD;EAAEE,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEX,IAAI;EAAEY,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EAC9E;EAAEJ,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEV,KAAK;EAAEW,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EACjF;EAAEJ,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAET,SAAS;EAAEU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EACzF;EAAEJ,IAAI,EAAE,eAAe;EAAEC,IAAI,EAAE,sBAAsB;EAAEC,SAAS,EAAER,oBAAoB;EAAES,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EACtH;EAAEJ,IAAI,EAAE,cAAc;EAAEC,IAAI,EAAE,qBAAqB;EAAEC,SAAS,EAAEP,mBAAmB;EAAEQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EACnH;EAAEJ,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEN;AAAM,CAAC,EACnD;EAAEI,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEL;AAAS,CAAC,EAC5D;EAAEG,IAAI,EAAE,gBAAgB;EAAEK,QAAQ,EAAE;AAAI,CAAC,CAAC;AAAA,CAC3C;AAED,IAAMC,MAAM,GAAGnB,YAAY,CAAC;EAC1BoB,OAAO,EAAEnB,gBAAgB,CAACoB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX,MAAM,EAANA;AACF,CAAC,CAAC;AAEFO,MAAM,CAACK,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC,IAAMC,IAAI,GAAG1B,OAAO,CAAC,CAAC;EACtB,IAAMe,YAAY,GAAGQ,EAAE,CAACI,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACf,IAAI,CAACC,YAAY;EAAA,EAAC;EAExEd,kBAAkB,CAACyB,IAAI,EAAE,UAACI,IAAI,EAAK;IACjC,IAAIf,YAAY,IAAI,CAACe,IAAI,EAAE;MACzBL,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC,MAAM,IAAIF,EAAE,CAACZ,IAAI,KAAK,GAAG,IAAImB,IAAI,EAAE;MAClCL,IAAI,CAAC,OAAO,CAAC;IACf,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}