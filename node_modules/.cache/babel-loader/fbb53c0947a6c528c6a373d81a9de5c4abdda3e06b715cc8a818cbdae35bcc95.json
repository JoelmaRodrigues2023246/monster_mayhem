{"ast":null,"code":"function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { db } from '../services/firebaseConfig';\nimport { doc, getDoc, onSnapshot, updateDoc } from 'firebase/firestore';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../services/firebaseConfig';\nexport default {\n  name: 'Game',\n  setup: function setup() {\n    var route = useRoute();\n    var gameId = ref(route.params.id);\n    var gameData = ref(null);\n    var currentPlayerNickname = ref('');\n    var currentTurnNickname = ref('');\n    var selectedMonsterType = ref(null);\n    var selectedMonster = ref(null);\n    var user = ref(null);\n    var canEndTurn = ref(false);\n    var addedMonster = false;\n    var movedMonster = false;\n    var playerColors = {\n      player1UID: 'green',\n      player2UID: 'red',\n      player3UID: 'blue',\n      player4UID: 'yellow'\n    };\n\n    // Load game data from Firestore\n    var loadGame = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var gameRef, gameSnap;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              gameRef = doc(db, 'games', gameId.value);\n              _context.next = 3;\n              return getDoc(gameRef);\n            case 3:\n              gameSnap = _context.sent;\n              if (gameSnap.exists()) {\n                gameData.value = gameSnap.data();\n                updateCurrentTurnNickname();\n              } else {\n                console.error('No such game!');\n              }\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function loadGame() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // Update current turn nickname\n    var updateCurrentTurnNickname = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(gameData.value && gameData.value.turn)) {\n                _context2.next = 4;\n                break;\n              }\n              _context2.next = 3;\n              return getNicknameById(gameData.value.turn);\n            case 3:\n              currentTurnNickname.value = _context2.sent;\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function updateCurrentTurnNickname() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    onMounted(function () {\n      loadGame();\n      var gameRef = doc(db, 'games', gameId.value);\n      onSnapshot(gameRef, function (doc) {\n        if (doc.exists()) {\n          gameData.value = doc.data();\n          console.log(\"Game Data:\", gameData.value);\n          console.log(\"Turn:\", gameData.value.turn);\n          updateCurrentTurnNickname();\n        }\n      });\n      onAuthStateChanged(auth, function (currentUser) {\n        if (currentUser) {\n          user.value = currentUser;\n          getNicknameById(currentUser.uid).then(function (nickname) {\n            currentPlayerNickname.value = nickname;\n          });\n        }\n      });\n    });\n\n    // Get nickname by user ID\n    var getNicknameById = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(uid) {\n        var userRef, userSnap;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              userRef = doc(db, 'users', uid);\n              _context3.next = 3;\n              return getDoc(userRef);\n            case 3:\n              userSnap = _context3.sent;\n              if (!userSnap.exists()) {\n                _context3.next = 8;\n                break;\n              }\n              return _context3.abrupt(\"return\", userSnap.data().nickname);\n            case 8:\n              return _context3.abrupt(\"return\", 'Unknown');\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function getNicknameById(_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // Get the monster at a specific position\n    var getMonsterAt = function getMonsterAt(row, col) {\n      if (!gameData.value) return '';\n      for (var player in gameData.value.state.playersData) {\n        var monsters = gameData.value.state.playersData[player].monsters;\n        var _iterator = _createForOfIteratorHelper(monsters),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var monster = _step.value;\n            if (monster.position[0] === row && monster.position[1] === col) {\n              return monster.type.charAt(0).toUpperCase(); // Display the initial of the monster\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      return '';\n    };\n\n    // Highlight permitted cells for the current player\n    var highlightPermittedCells = function highlightPermittedCells(cells) {\n      cells.forEach(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n          row = _ref5[0],\n          col = _ref5[1];\n        document.querySelector(\".cell[data-row='\".concat(row, \"'][data-col='\").concat(col, \"']\")).classList.add('highlight');\n      });\n    };\n\n    // Clear highlights from cells\n    var clearHighlights = function clearHighlights() {\n      document.querySelectorAll('.cell.highlight').forEach(function (cell) {\n        return cell.classList.remove('highlight');\n      });\n    };\n\n    // Prepare to add a monster of a specific type\n    var prepareAddMonster = function prepareAddMonster(monsterType) {\n      selectedMonsterType.value = monsterType;\n      clearHighlights();\n      var permittedCells = getPermittedCells(gameData.value.turn);\n      con;\n      highlightPermittedCells(permittedCells);\n    };\n\n    // Get permitted cells for the current player\n    var getPermittedCells = function getPermittedCells(playerId) {\n      switch (playerId) {\n        case 'player1UID':\n          return Array.from({\n            length: 9\n          }, function (_, i) {\n            return [i + 1, 0];\n          });\n        case 'player2UID':\n          return Array.from({\n            length: 9\n          }, function (_, i) {\n            return [0, i];\n          });\n        case 'player3UID':\n          return Array.from({\n            length: 9\n          }, function (_, i) {\n            return [i, 9];\n          });\n        case 'player4UID':\n          return Array.from({\n            length: 9\n          }, function (_, i) {\n            return [9, i + 1];\n          });\n        default:\n          return [];\n      }\n    };\n\n    // Select a cell to place the monster or move the monster\n    var selectCell = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(row, col) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (selectedMonsterType.value) {\n                addMonsterToCell(row, col);\n              } else if (selectedMonster.value) {\n                moveMonsterToCell(row, col);\n              }\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return function selectCell(_x2, _x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    // Add monster to the selected cell\n    var addMonsterToCell = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(row, col) {\n        var permittedCells, newState, currentPlayer, playerMonsters;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(!selectedMonsterType.value || !gameData.value)) {\n                _context5.next = 2;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 2:\n              permittedCells = getPermittedCells(gameData.value.turn);\n              if (permittedCells.some(function (cell) {\n                return cell[0] === row && cell[1] === col;\n              })) {\n                _context5.next = 5;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 5:\n              // Check if cell is permitted\n              newState = _objectSpread({}, gameData.value.state);\n              currentPlayer = newState.turn;\n              if (!newState.playersData[currentPlayer].monsters) {\n                newState.playersData[currentPlayer].monsters = [];\n              }\n              playerMonsters = newState.playersData[currentPlayer].monsters;\n              playerMonsters.push({\n                type: selectedMonsterType.value,\n                position: [row, col]\n              });\n              _context5.next = 12;\n              return updateDoc(doc(db, 'games', gameId.value), {\n                state: newState\n              });\n            case 12:\n              selectedMonsterType.value = null; // Reset selected monster type\n              addedMonster = true;\n              checkEndTurnAvailability();\n              clearHighlights();\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      return function addMonsterToCell(_x4, _x5) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    // Move monster to the selected cell\n    var moveMonsterToCell = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(row, col) {\n        var newState, currentPlayer, playerMonsters, monster;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(!selectedMonster.value || !gameData.value)) {\n                _context6.next = 2;\n                break;\n              }\n              return _context6.abrupt(\"return\");\n            case 2:\n              newState = _objectSpread({}, gameData.value.state);\n              currentPlayer = newState.turn;\n              playerMonsters = newState.playersData[currentPlayer].monsters; // Find the monster and update its position\n              monster = playerMonsters.find(function (m) {\n                return m.position[0] === selectedMonster.value[0] && m.position[1] === selectedMonster.value[1];\n              });\n              if (!monster) {\n                _context6.next = 14;\n                break;\n              }\n              monster.position = [row, col];\n              _context6.next = 10;\n              return updateDoc(doc(db, 'games', gameId.value), {\n                state: newState\n              });\n            case 10:\n              movedMonster = true;\n              checkEndTurnAvailability();\n              clearHighlights();\n              selectedMonster.value = null; // Reset selected monster\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      return function moveMonsterToCell(_x6, _x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    // Check if the end turn button can be enabled\n    var checkEndTurnAvailability = function checkEndTurnAvailability() {\n      canEndTurn.value = addedMonster && movedMonster;\n    };\n\n    // End the turn for the current player\n    var endTurn = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var newState, currentPlayerIndex, nextPlayerIndex;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              addedMonster = false;\n              movedMonster = false;\n              canEndTurn.value = false;\n              newState = _objectSpread({}, gameData.value.state);\n              currentPlayerIndex = gameData.value.players.indexOf(gameData.value.turn);\n              nextPlayerIndex = (currentPlayerIndex + 1) % gameData.value.players.length;\n              newState.turn = gameData.value.players[nextPlayerIndex];\n              _context7.next = 9;\n              return updateDoc(doc(db, 'games', gameId.value), {\n                state: newState\n              });\n            case 9:\n              updateCurrentTurnNickname();\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      return function endTurn() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n    return {\n      gameId: gameId,\n      gameData: gameData,\n      currentPlayerNickname: currentPlayerNickname,\n      currentTurnNickname: currentTurnNickname,\n      playerColors: playerColors,\n      getMonsterAt: getMonsterAt,\n      prepareAddMonster: prepareAddMonster,\n      selectCell: selectCell,\n      canEndTurn: canEndTurn,\n      endTurn: endTurn\n    };\n  }\n};","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","ref","onMounted","useRoute","db","doc","getDoc","onSnapshot","updateDoc","onAuthStateChanged","auth","setup","route","gameId","params","id","gameData","currentPlayerNickname","currentTurnNickname","selectedMonsterType","selectedMonster","user","canEndTurn","addedMonster","movedMonster","playerColors","player1UID","player2UID","player3UID","player4UID","loadGame","_ref","_callee","gameRef","gameSnap","_callee$","_context","exists","data","updateCurrentTurnNickname","console","error","_ref2","_callee2","_callee2$","_context2","turn","getNicknameById","log","currentUser","uid","nickname","_ref3","_callee3","userRef","userSnap","_callee3$","_context3","_x","getMonsterAt","row","col","player","state","playersData","monsters","_iterator","_createForOfIteratorHelper","_step","monster","position","toUpperCase","err","highlightPermittedCells","cells","_ref4","_ref5","_slicedToArray","document","querySelector","concat","classList","add","clearHighlights","querySelectorAll","cell","remove","prepareAddMonster","monsterType","permittedCells","getPermittedCells","con","playerId","Array","from","_","selectCell","_ref6","_callee4","_callee4$","_context4","addMonsterToCell","moveMonsterToCell","_x2","_x3","_ref7","_callee5","newState","currentPlayer","playerMonsters","_callee5$","_context5","some","_objectSpread","checkEndTurnAvailability","_x4","_x5","_ref8","_callee6","_callee6$","_context6","find","m","_x6","_x7","endTurn","_ref9","_callee7","currentPlayerIndex","nextPlayerIndex","_callee7$","_context7","players","indexOf"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\views\\Game.vue"],"sourcesContent":["<template>\r\n  <div class=\"game\">\r\n    <h1>Game</h1>\r\n    <p>Player: {{ currentPlayerNickname }}</p>\r\n    <p>Current Turn: {{ currentTurnNickname }}</p>\r\n    <div v-if=\"gameData\">\r\n      <div class=\"board\">\r\n        <div v-for=\"row in 10\" :key=\"row\" class=\"row\">\r\n          <div v-for=\"col in 10\" :key=\"col\" class=\"cell\" :data-row=\"row-1\" :data-col=\"col-1\" @click=\"selectCell(row - 1, col - 1)\">\r\n            {{ getMonsterAt(row - 1, col - 1) }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"controls\">\r\n        <button @click=\"prepareAddMonster('vampire')\">Add Vampire</button>\r\n        <button @click=\"prepareAddMonster('werewolf')\">Add Werewolf</button>\r\n        <button @click=\"prepareAddMonster('ghost')\">Add Ghost</button>\r\n        <button id=\"endTurnButton\" @click=\"endTurn\" :disabled=\"!canEndTurn\">End Turn</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { db } from '../services/firebaseConfig';\r\nimport { doc, getDoc, onSnapshot, updateDoc } from 'firebase/firestore';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from '../services/firebaseConfig';\r\n\r\nexport default {\r\n  name: 'Game',\r\n  setup() {\r\n    const route = useRoute();\r\n    const gameId = ref(route.params.id);\r\n    const gameData = ref(null);\r\n    const currentPlayerNickname = ref('');\r\n    const currentTurnNickname = ref('');\r\n    const selectedMonsterType = ref(null);\r\n    const selectedMonster = ref(null);\r\n    const user = ref(null);\r\n    const canEndTurn = ref(false);\r\n    let addedMonster = false;\r\n    let movedMonster = false;\r\n\r\n    const playerColors = {\r\n      player1UID: 'green',\r\n      player2UID: 'red',\r\n      player3UID: 'blue',\r\n      player4UID: 'yellow',\r\n    };\r\n\r\n    // Load game data from Firestore\r\n    const loadGame = async () => {\r\n      const gameRef = doc(db, 'games', gameId.value);\r\n      const gameSnap = await getDoc(gameRef);\r\n      if (gameSnap.exists()) {\r\n        gameData.value = gameSnap.data();\r\n        updateCurrentTurnNickname();\r\n      } else {\r\n        console.error('No such game!');\r\n      }\r\n    };\r\n\r\n    // Update current turn nickname\r\n    const updateCurrentTurnNickname = async () => {\r\n      if (gameData.value && gameData.value.turn) {\r\n        currentTurnNickname.value = await getNicknameById(gameData.value.turn);\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadGame();\r\n      const gameRef = doc(db, 'games', gameId.value);\r\n      onSnapshot(gameRef, (doc) => {\r\n        if (doc.exists()) {\r\n          gameData.value = doc.data();\r\n          console.log(\"Game Data:\", gameData.value);\r\n          console.log(\"Turn:\", gameData.value.turn);\r\n          updateCurrentTurnNickname();\r\n        }\r\n      });\r\n\r\n      onAuthStateChanged(auth, (currentUser) => {\r\n        if (currentUser) {\r\n          user.value = currentUser;\r\n          getNicknameById(currentUser.uid).then((nickname) => {\r\n            currentPlayerNickname.value = nickname;\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    // Get nickname by user ID\r\n    const getNicknameById = async (uid) => {\r\n      const userRef = doc(db, 'users', uid);\r\n      const userSnap = await getDoc(userRef);\r\n      if (userSnap.exists()) {\r\n        return userSnap.data().nickname;\r\n      } else {\r\n        return 'Unknown';\r\n      }\r\n    };\r\n\r\n    // Get the monster at a specific position\r\n    const getMonsterAt = (row, col) => {\r\n      if (!gameData.value) return '';\r\n      for (let player in gameData.value.state.playersData) {\r\n        const monsters = gameData.value.state.playersData[player].monsters;\r\n        for (let monster of monsters) {\r\n          if (monster.position[0] === row && monster.position[1] === col) {\r\n            return monster.type.charAt(0).toUpperCase(); // Display the initial of the monster\r\n          }\r\n        }\r\n      }\r\n      return '';\r\n    };\r\n\r\n    // Highlight permitted cells for the current player\r\n    const highlightPermittedCells = (cells) => {\r\n      cells.forEach(([row, col]) => {\r\n        document.querySelector(`.cell[data-row='${row}'][data-col='${col}']`).classList.add('highlight');\r\n      });\r\n    };\r\n\r\n    // Clear highlights from cells\r\n    const clearHighlights = () => {\r\n      document.querySelectorAll('.cell.highlight').forEach(cell => cell.classList.remove('highlight'));\r\n    };\r\n\r\n    // Prepare to add a monster of a specific type\r\n    const prepareAddMonster = (monsterType) => {\r\n      selectedMonsterType.value = monsterType;\r\n      clearHighlights();\r\n      const permittedCells = getPermittedCells(gameData.value.turn);\r\n      con\r\n      highlightPermittedCells(permittedCells);\r\n    };\r\n\r\n    // Get permitted cells for the current player\r\n    const getPermittedCells = (playerId) => {\r\n      switch(playerId) {\r\n        case 'player1UID':\r\n          return Array.from({length: 9}, (_, i) => [i + 1, 0]);\r\n        case 'player2UID':\r\n          return Array.from({length: 9}, (_, i) => [0, i]);\r\n        case 'player3UID':\r\n          return Array.from({length: 9}, (_, i) => [i, 9]);\r\n        case 'player4UID':\r\n          return Array.from({length: 9}, (_, i) => [9, i + 1]);\r\n        default:\r\n          return [];\r\n      }\r\n    };\r\n\r\n    // Select a cell to place the monster or move the monster\r\n    const selectCell = async (row, col) => {\r\n      if (selectedMonsterType.value) {\r\n        addMonsterToCell(row, col);\r\n      } else if (selectedMonster.value) {\r\n        moveMonsterToCell(row, col);\r\n      }\r\n    };\r\n\r\n    // Add monster to the selected cell\r\n    const addMonsterToCell = async (row, col) => {\r\n      if (!selectedMonsterType.value || !gameData.value) return;\r\n      \r\n      const permittedCells = getPermittedCells(gameData.value.turn);\r\n      if (!permittedCells.some(cell => cell[0] === row && cell[1] === col)) return; // Check if cell is permitted\r\n\r\n      const newState = { ...gameData.value.state };\r\n      const currentPlayer = newState.turn;\r\n      if (!newState.playersData[currentPlayer].monsters) {\r\n        newState.playersData[currentPlayer].monsters = [];\r\n      }\r\n      const playerMonsters = newState.playersData[currentPlayer].monsters;\r\n      playerMonsters.push({ type: selectedMonsterType.value, position: [row, col] });\r\n\r\n      await updateDoc(doc(db, 'games', gameId.value), { state: newState });\r\n      selectedMonsterType.value = null; // Reset selected monster type\r\n      addedMonster = true;\r\n      checkEndTurnAvailability();\r\n      clearHighlights();\r\n    };\r\n\r\n    // Move monster to the selected cell\r\n    const moveMonsterToCell = async (row, col) => {\r\n      if (!selectedMonster.value || !gameData.value) return;\r\n\r\n      const newState = { ...gameData.value.state };\r\n      const currentPlayer = newState.turn;\r\n      const playerMonsters = newState.playersData[currentPlayer].monsters;\r\n\r\n      // Find the monster and update its position\r\n      const monster = playerMonsters.find(m => m.position[0] === selectedMonster.value[0] && m.position[1] === selectedMonster.value[1]);\r\n      if (monster) {\r\n        monster.position = [row, col];\r\n        await updateDoc(doc(db, 'games', gameId.value), { state: newState });\r\n        movedMonster = true;\r\n        checkEndTurnAvailability();\r\n        clearHighlights();\r\n        selectedMonster.value = null; // Reset selected monster\r\n      }\r\n    };\r\n\r\n    // Check if the end turn button can be enabled\r\n    const checkEndTurnAvailability = () => {\r\n      canEndTurn.value = addedMonster && movedMonster;\r\n    };\r\n\r\n    // End the turn for the current player\r\n    const endTurn = async () => {\r\n      addedMonster = false;\r\n      movedMonster = false;\r\n      canEndTurn.value = false;\r\n\r\n      const newState = { ...gameData.value.state };\r\n      const currentPlayerIndex = gameData.value.players.indexOf(gameData.value.turn);\r\n      const nextPlayerIndex = (currentPlayerIndex + 1) % gameData.value.players.length;\r\n      newState.turn = gameData.value.players[nextPlayerIndex];\r\n\r\n      await updateDoc(doc(db, 'games', gameId.value), { state: newState });\r\n      updateCurrentTurnNickname();\r\n    };\r\n\r\n    return {\r\n      gameId,\r\n      gameData,\r\n      currentPlayerNickname,\r\n      currentTurnNickname,\r\n      playerColors,\r\n      getMonsterAt,\r\n      prepareAddMonster,\r\n      selectCell,\r\n      canEndTurn,\r\n      endTurn,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.game {\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n.board {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 30px);\r\n  grid-template-rows: repeat(10, 30px);\r\n  gap: 1px;\r\n  margin: 20px auto;\r\n}\r\n.cell {\r\n  width: 30px;\r\n  height: 30px;\r\n  border: 1px solid #000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.highlight {\r\n  background-color: yellow;\r\n}\r\n.controls {\r\n  margin-top: 20px;\r\n}\r\n.controls button {\r\n  margin: 0 5px;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;+CAwBA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,UAAA,cAAAa,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,OAAA,CAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,2BAAA,eAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,QAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,KAAA,aAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,CAAAd,OAAA,CAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAb,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,KAAA,WAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,KAAA,SAAAxC,IAAA,WAAAtD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,QAAAsC,KAAA,qDAAAsC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAR,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAS,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAS,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,yBAAAiE,OAAAnG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,YAAA+C,KAAA,8BAAA+C,aAAA,WAAAA,cAAArG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AAAA,SAAAsG,mBAAAjG,CAAA,EAAAJ,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAK,CAAA,EAAAK,CAAA,EAAAE,CAAA,cAAAJ,CAAA,GAAAL,CAAA,CAAAO,CAAA,EAAAE,CAAA,GAAAE,CAAA,GAAAN,CAAA,CAAAD,KAAA,WAAAJ,CAAA,gBAAAL,CAAA,CAAAK,CAAA,KAAAK,CAAA,CAAA6C,IAAA,GAAAtD,CAAA,CAAAe,CAAA,IAAAwE,OAAA,CAAAtC,OAAA,CAAAlC,CAAA,EAAAoC,IAAA,CAAAlD,CAAA,EAAAK,CAAA;AAAA,SAAAgG,kBAAAlG,CAAA,6BAAAJ,CAAA,SAAAD,CAAA,GAAAwG,SAAA,aAAAhB,OAAA,WAAAtF,CAAA,EAAAK,CAAA,QAAAK,CAAA,GAAAP,CAAA,CAAAoG,KAAA,CAAAxG,CAAA,EAAAD,CAAA,YAAA0G,MAAArG,CAAA,IAAAiG,kBAAA,CAAA1F,CAAA,EAAAV,CAAA,EAAAK,CAAA,EAAAmG,KAAA,EAAAC,MAAA,UAAAtG,CAAA,cAAAsG,OAAAtG,CAAA,IAAAiG,kBAAA,CAAA1F,CAAA,EAAAV,CAAA,EAAAK,CAAA,EAAAmG,KAAA,EAAAC,MAAA,WAAAtG,CAAA,KAAAqG,KAAA;AAAA,SAASE,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,YAAY;AACrC,SAASC,EAAC,QAAS,4BAA4B;AAC/C,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAQ,QAAS,oBAAoB;AACvE,SAASC,kBAAiB,QAAS,eAAe;AAClD,SAASC,IAAG,QAAS,4BAA4B;AAEjD,eAAe;EACbnC,IAAI,EAAE,MAAM;EACZoC,KAAK,WAAAA,MAAA,EAAG;IACN,IAAMC,KAAI,GAAIT,QAAQ,CAAC,CAAC;IACxB,IAAMU,MAAK,GAAIZ,GAAG,CAACW,KAAK,CAACE,MAAM,CAACC,EAAE,CAAC;IACnC,IAAMC,QAAO,GAAIf,GAAG,CAAC,IAAI,CAAC;IAC1B,IAAMgB,qBAAoB,GAAIhB,GAAG,CAAC,EAAE,CAAC;IACrC,IAAMiB,mBAAkB,GAAIjB,GAAG,CAAC,EAAE,CAAC;IACnC,IAAMkB,mBAAkB,GAAIlB,GAAG,CAAC,IAAI,CAAC;IACrC,IAAMmB,eAAc,GAAInB,GAAG,CAAC,IAAI,CAAC;IACjC,IAAMoB,IAAG,GAAIpB,GAAG,CAAC,IAAI,CAAC;IACtB,IAAMqB,UAAS,GAAIrB,GAAG,CAAC,KAAK,CAAC;IAC7B,IAAIsB,YAAW,GAAI,KAAK;IACxB,IAAIC,YAAW,GAAI,KAAK;IAExB,IAAMC,YAAW,GAAI;MACnBC,UAAU,EAAE,OAAO;MACnBC,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAE,MAAM;MAClBC,UAAU,EAAE;IACd,CAAC;;IAED;IACA,IAAMC,QAAO;MAAA,IAAAC,IAAA,GAAAnC,iBAAA,eAAAxG,mBAAA,GAAAoF,IAAA,CAAI,SAAAwD,QAAA;QAAA,IAAAC,OAAA,EAAAC,QAAA;QAAA,OAAA9I,mBAAA,GAAAuB,IAAA,UAAAwH,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAnD,IAAA,GAAAmD,QAAA,CAAA9E,IAAA;YAAA;cACT2E,OAAM,GAAI5B,GAAG,CAACD,EAAE,EAAE,OAAO,EAAES,MAAM,CAAC/G,KAAK,CAAC;cAAAsI,QAAA,CAAA9E,IAAA;cAAA,OACvBgD,MAAM,CAAC2B,OAAO,CAAC;YAAA;cAAhCC,QAAO,GAAAE,QAAA,CAAApF,IAAA;cACb,IAAIkF,QAAQ,CAACG,MAAM,CAAC,CAAC,EAAE;gBACrBrB,QAAQ,CAAClH,KAAI,GAAIoI,QAAQ,CAACI,IAAI,CAAC,CAAC;gBAChCC,yBAAyB,CAAC,CAAC;cAC7B,OAAO;gBACLC,OAAO,CAACC,KAAK,CAAC,eAAe,CAAC;cAChC;YAAA;YAAA;cAAA,OAAAL,QAAA,CAAAhD,IAAA;UAAA;QAAA,GAAA4C,OAAA;MAAA,CACD;MAAA,gBATKF,QAAOA,CAAA;QAAA,OAAAC,IAAA,CAAAjC,KAAA,OAAAD,SAAA;MAAA;IAAA,GASZ;;IAED;IACA,IAAM0C,yBAAwB;MAAA,IAAAG,KAAA,GAAA9C,iBAAA,eAAAxG,mBAAA,GAAAoF,IAAA,CAAI,SAAAmE,SAAA;QAAA,OAAAvJ,mBAAA,GAAAuB,IAAA,UAAAiI,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA5D,IAAA,GAAA4D,SAAA,CAAAvF,IAAA;YAAA;cAAA,MAC5B0D,QAAQ,CAAClH,KAAI,IAAKkH,QAAQ,CAAClH,KAAK,CAACgJ,IAAI;gBAAAD,SAAA,CAAAvF,IAAA;gBAAA;cAAA;cAAAuF,SAAA,CAAAvF,IAAA;cAAA,OACLyF,eAAe,CAAC/B,QAAQ,CAAClH,KAAK,CAACgJ,IAAI,CAAC;YAAA;cAAtE5B,mBAAmB,CAACpH,KAAI,GAAA+I,SAAA,CAAA7F,IAAA;YAAA;YAAA;cAAA,OAAA6F,SAAA,CAAAzD,IAAA;UAAA;QAAA,GAAAuD,QAAA;MAAA,CAE3B;MAAA,gBAJKJ,yBAAwBA,CAAA;QAAA,OAAAG,KAAA,CAAA5C,KAAA,OAAAD,SAAA;MAAA;IAAA,GAI7B;IAEDK,SAAS,CAAC,YAAM;MACd4B,QAAQ,CAAC,CAAC;MACV,IAAMG,OAAM,GAAI5B,GAAG,CAACD,EAAE,EAAE,OAAO,EAAES,MAAM,CAAC/G,KAAK,CAAC;MAC9CyG,UAAU,CAAC0B,OAAO,EAAE,UAAC5B,GAAG,EAAK;QAC3B,IAAIA,GAAG,CAACgC,MAAM,CAAC,CAAC,EAAE;UAChBrB,QAAQ,CAAClH,KAAI,GAAIuG,GAAG,CAACiC,IAAI,CAAC,CAAC;UAC3BE,OAAO,CAACQ,GAAG,CAAC,YAAY,EAAEhC,QAAQ,CAAClH,KAAK,CAAC;UACzC0I,OAAO,CAACQ,GAAG,CAAC,OAAO,EAAEhC,QAAQ,CAAClH,KAAK,CAACgJ,IAAI,CAAC;UACzCP,yBAAyB,CAAC,CAAC;QAC7B;MACF,CAAC,CAAC;MAEF9B,kBAAkB,CAACC,IAAI,EAAE,UAACuC,WAAW,EAAK;QACxC,IAAIA,WAAW,EAAE;UACf5B,IAAI,CAACvH,KAAI,GAAImJ,WAAW;UACxBF,eAAe,CAACE,WAAW,CAACC,GAAG,CAAC,CAACzG,IAAI,CAAC,UAAC0G,QAAQ,EAAK;YAClDlC,qBAAqB,CAACnH,KAAI,GAAIqJ,QAAQ;UACxC,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,IAAMJ,eAAc;MAAA,IAAAK,KAAA,GAAAxD,iBAAA,eAAAxG,mBAAA,GAAAoF,IAAA,CAAI,SAAA6E,SAAOH,GAAG;QAAA,IAAAI,OAAA,EAAAC,QAAA;QAAA,OAAAnK,mBAAA,GAAAuB,IAAA,UAAA6I,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxE,IAAA,GAAAwE,SAAA,CAAAnG,IAAA;YAAA;cAC1BgG,OAAM,GAAIjD,GAAG,CAACD,EAAE,EAAE,OAAO,EAAE8C,GAAG,CAAC;cAAAO,SAAA,CAAAnG,IAAA;cAAA,OACdgD,MAAM,CAACgD,OAAO,CAAC;YAAA;cAAhCC,QAAO,GAAAE,SAAA,CAAAzG,IAAA;cAAA,KACTuG,QAAQ,CAAClB,MAAM,CAAC,CAAC;gBAAAoB,SAAA,CAAAnG,IAAA;gBAAA;cAAA;cAAA,OAAAmG,SAAA,CAAAtG,MAAA,WACZoG,QAAQ,CAACjB,IAAI,CAAC,CAAC,CAACa,QAAQ;YAAA;cAAA,OAAAM,SAAA,CAAAtG,MAAA,WAExB,SAAS;YAAA;YAAA;cAAA,OAAAsG,SAAA,CAAArE,IAAA;UAAA;QAAA,GAAAiE,QAAA;MAAA,CAEnB;MAAA,gBARKN,eAAcA,CAAAW,EAAA;QAAA,OAAAN,KAAA,CAAAtD,KAAA,OAAAD,SAAA;MAAA;IAAA,GAQnB;;IAED;IACA,IAAM8D,YAAW,GAAI,SAAfA,YAAWA,CAAKC,GAAG,EAAEC,GAAG,EAAK;MACjC,IAAI,CAAC7C,QAAQ,CAAClH,KAAK,EAAE,OAAO,EAAE;MAC9B,KAAK,IAAIgK,MAAK,IAAK9C,QAAQ,CAAClH,KAAK,CAACiK,KAAK,CAACC,WAAW,EAAE;QACnD,IAAMC,QAAO,GAAIjD,QAAQ,CAAClH,KAAK,CAACiK,KAAK,CAACC,WAAW,CAACF,MAAM,CAAC,CAACG,QAAQ;QAAA,IAAAC,SAAA,GAAAC,0BAAA,CAC9CF,QAAQ;UAAAG,KAAA;QAAA;UAA5B,KAAAF,SAAA,CAAA3I,CAAA,MAAA6I,KAAA,GAAAF,SAAA,CAAAxK,CAAA,IAAAkD,IAAA,GAA8B;YAAA,IAArByH,OAAM,GAAAD,KAAA,CAAAtK,KAAA;YACb,IAAIuK,OAAO,CAACC,QAAQ,CAAC,CAAC,MAAMV,GAAE,IAAKS,OAAO,CAACC,QAAQ,CAAC,CAAC,MAAMT,GAAG,EAAE;cAC9D,OAAOQ,OAAO,CAACpJ,IAAI,CAACiE,MAAM,CAAC,CAAC,CAAC,CAACqF,WAAW,CAAC,CAAC,EAAE;YAC/C;UACF;QAAA,SAAAC,GAAA;UAAAN,SAAA,CAAA7K,CAAA,CAAAmL,GAAA;QAAA;UAAAN,SAAA,CAAA5I,CAAA;QAAA;MACF;MACA,OAAO,EAAE;IACX,CAAC;;IAED;IACA,IAAMmJ,uBAAsB,GAAI,SAA1BA,uBAAsBA,CAAKC,KAAK,EAAK;MACzCA,KAAK,CAACxI,OAAO,CAAC,UAAAyI,KAAA,EAAgB;QAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,KAAA;UAAdf,GAAG,GAAAgB,KAAA;UAAEf,GAAG,GAAAe,KAAA;QACtBE,QAAQ,CAACC,aAAa,oBAAAC,MAAA,CAAoBpB,GAAG,mBAAAoB,MAAA,CAAgBnB,GAAG,OAAI,CAAC,CAACoB,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MAClG,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,IAAMC,eAAc,GAAI,SAAlBA,eAAcA,CAAA,EAAU;MAC5BL,QAAQ,CAACM,gBAAgB,CAAC,iBAAiB,CAAC,CAAClJ,OAAO,CAAC,UAAAmJ,IAAG;QAAA,OAAKA,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC,WAAW,CAAC;MAAA,EAAC;IAClG,CAAC;;IAED;IACA,IAAMC,iBAAgB,GAAI,SAApBA,iBAAgBA,CAAKC,WAAW,EAAK;MACzCrE,mBAAmB,CAACrH,KAAI,GAAI0L,WAAW;MACvCL,eAAe,CAAC,CAAC;MACjB,IAAMM,cAAa,GAAIC,iBAAiB,CAAC1E,QAAQ,CAAClH,KAAK,CAACgJ,IAAI,CAAC;MAC7D6C,GAAE;MACFlB,uBAAuB,CAACgB,cAAc,CAAC;IACzC,CAAC;;IAED;IACA,IAAMC,iBAAgB,GAAI,SAApBA,iBAAgBA,CAAKE,QAAQ,EAAK;MACtC,QAAOA,QAAQ;QACb,KAAK,YAAY;UACf,OAAOC,KAAK,CAACC,IAAI,CAAC;YAAC3H,MAAM,EAAE;UAAC,CAAC,EAAE,UAAC4H,CAAC,EAAEhM,CAAC;YAAA,OAAK,CAACA,CAAA,GAAI,CAAC,EAAE,CAAC,CAAC;UAAA,EAAC;QACtD,KAAK,YAAY;UACf,OAAO8L,KAAK,CAACC,IAAI,CAAC;YAAC3H,MAAM,EAAE;UAAC,CAAC,EAAE,UAAC4H,CAAC,EAAEhM,CAAC;YAAA,OAAK,CAAC,CAAC,EAAEA,CAAC,CAAC;UAAA,EAAC;QAClD,KAAK,YAAY;UACf,OAAO8L,KAAK,CAACC,IAAI,CAAC;YAAC3H,MAAM,EAAE;UAAC,CAAC,EAAE,UAAC4H,CAAC,EAAEhM,CAAC;YAAA,OAAK,CAACA,CAAC,EAAE,CAAC,CAAC;UAAA,EAAC;QAClD,KAAK,YAAY;UACf,OAAO8L,KAAK,CAACC,IAAI,CAAC;YAAC3H,MAAM,EAAE;UAAC,CAAC,EAAE,UAAC4H,CAAC,EAAEhM,CAAC;YAAA,OAAK,CAAC,CAAC,EAAEA,CAAA,GAAI,CAAC,CAAC;UAAA,EAAC;QACtD;UACE,OAAO,EAAE;MACb;IACF,CAAC;;IAED;IACA,IAAMiM,UAAS;MAAA,IAAAC,KAAA,GAAArG,iBAAA,eAAAxG,mBAAA,GAAAoF,IAAA,CAAI,SAAA0H,SAAOtC,GAAG,EAAEC,GAAG;QAAA,OAAAzK,mBAAA,GAAAuB,IAAA,UAAAwL,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAnH,IAAA,GAAAmH,SAAA,CAAA9I,IAAA;YAAA;cAChC,IAAI6D,mBAAmB,CAACrH,KAAK,EAAE;gBAC7BuM,gBAAgB,CAACzC,GAAG,EAAEC,GAAG,CAAC;cAC5B,OAAO,IAAIzC,eAAe,CAACtH,KAAK,EAAE;gBAChCwM,iBAAiB,CAAC1C,GAAG,EAAEC,GAAG,CAAC;cAC7B;YAAA;YAAA;cAAA,OAAAuC,SAAA,CAAAhH,IAAA;UAAA;QAAA,GAAA8G,QAAA;MAAA,CACD;MAAA,gBANKF,UAASA,CAAAO,GAAA,EAAAC,GAAA;QAAA,OAAAP,KAAA,CAAAnG,KAAA,OAAAD,SAAA;MAAA;IAAA,GAMd;;IAED;IACA,IAAMwG,gBAAe;MAAA,IAAAI,KAAA,GAAA7G,iBAAA,eAAAxG,mBAAA,GAAAoF,IAAA,CAAI,SAAAkI,SAAO9C,GAAG,EAAEC,GAAG;QAAA,IAAA4B,cAAA,EAAAkB,QAAA,EAAAC,aAAA,EAAAC,cAAA;QAAA,OAAAzN,mBAAA,GAAAuB,IAAA,UAAAmM,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA9H,IAAA,GAAA8H,SAAA,CAAAzJ,IAAA;YAAA;cAAA,MAClC,CAAC6D,mBAAmB,CAACrH,KAAI,IAAK,CAACkH,QAAQ,CAAClH,KAAK;gBAAAiN,SAAA,CAAAzJ,IAAA;gBAAA;cAAA;cAAA,OAAAyJ,SAAA,CAAA5J,MAAA;YAAA;cAE3CsI,cAAa,GAAIC,iBAAiB,CAAC1E,QAAQ,CAAClH,KAAK,CAACgJ,IAAI,CAAC;cAAA,IACxD2C,cAAc,CAACuB,IAAI,CAAC,UAAA3B,IAAG;gBAAA,OAAKA,IAAI,CAAC,CAAC,MAAMzB,GAAE,IAAKyB,IAAI,CAAC,CAAC,MAAMxB,GAAG;cAAA,EAAC;gBAAAkD,SAAA,CAAAzJ,IAAA;gBAAA;cAAA;cAAA,OAAAyJ,SAAA,CAAA5J,MAAA;YAAA;cAAU;cAExEwJ,QAAO,GAAAM,aAAA,KAASjG,QAAQ,CAAClH,KAAK,CAACiK,KAAI;cACnC6C,aAAY,GAAID,QAAQ,CAAC7D,IAAI;cACnC,IAAI,CAAC6D,QAAQ,CAAC3C,WAAW,CAAC4C,aAAa,CAAC,CAAC3C,QAAQ,EAAE;gBACjD0C,QAAQ,CAAC3C,WAAW,CAAC4C,aAAa,CAAC,CAAC3C,QAAO,GAAI,EAAE;cACnD;cACM4C,cAAa,GAAIF,QAAQ,CAAC3C,WAAW,CAAC4C,aAAa,CAAC,CAAC3C,QAAQ;cACnE4C,cAAc,CAAC/I,IAAI,CAAC;gBAAE7C,IAAI,EAAEkG,mBAAmB,CAACrH,KAAK;gBAAEwK,QAAQ,EAAE,CAACV,GAAG,EAAEC,GAAG;cAAE,CAAC,CAAC;cAAAkD,SAAA,CAAAzJ,IAAA;cAAA,OAExEkD,SAAS,CAACH,GAAG,CAACD,EAAE,EAAE,OAAO,EAAES,MAAM,CAAC/G,KAAK,CAAC,EAAE;gBAAEiK,KAAK,EAAE4C;cAAS,CAAC,CAAC;YAAA;cACpExF,mBAAmB,CAACrH,KAAI,GAAI,IAAI,EAAE;cAClCyH,YAAW,GAAI,IAAI;cACnB2F,wBAAwB,CAAC,CAAC;cAC1B/B,eAAe,CAAC,CAAC;YAAA;YAAA;cAAA,OAAA4B,SAAA,CAAA3H,IAAA;UAAA;QAAA,GAAAsH,QAAA;MAAA,CAClB;MAAA,gBAnBKL,gBAAeA,CAAAc,GAAA,EAAAC,GAAA;QAAA,OAAAX,KAAA,CAAA3G,KAAA,OAAAD,SAAA;MAAA;IAAA,GAmBpB;;IAED;IACA,IAAMyG,iBAAgB;MAAA,IAAAe,KAAA,GAAAzH,iBAAA,eAAAxG,mBAAA,GAAAoF,IAAA,CAAI,SAAA8I,SAAO1D,GAAG,EAAEC,GAAG;QAAA,IAAA8C,QAAA,EAAAC,aAAA,EAAAC,cAAA,EAAAxC,OAAA;QAAA,OAAAjL,mBAAA,GAAAuB,IAAA,UAAA4M,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAvI,IAAA,GAAAuI,SAAA,CAAAlK,IAAA;YAAA;cAAA,MACnC,CAAC8D,eAAe,CAACtH,KAAI,IAAK,CAACkH,QAAQ,CAAClH,KAAK;gBAAA0N,SAAA,CAAAlK,IAAA;gBAAA;cAAA;cAAA,OAAAkK,SAAA,CAAArK,MAAA;YAAA;cAEvCwJ,QAAO,GAAAM,aAAA,KAASjG,QAAQ,CAAClH,KAAK,CAACiK,KAAI;cACnC6C,aAAY,GAAID,QAAQ,CAAC7D,IAAI;cAC7B+D,cAAa,GAAIF,QAAQ,CAAC3C,WAAW,CAAC4C,aAAa,CAAC,CAAC3C,QAAQ,EAEnE;cACMI,OAAM,GAAIwC,cAAc,CAACY,IAAI,CAAC,UAAAC,CAAA;gBAAA,OAAKA,CAAC,CAACpD,QAAQ,CAAC,CAAC,MAAMlD,eAAe,CAACtH,KAAK,CAAC,CAAC,KAAK4N,CAAC,CAACpD,QAAQ,CAAC,CAAC,MAAMlD,eAAe,CAACtH,KAAK,CAAC,CAAC,CAAC;cAAA,EAAC;cAAA,KAC9HuK,OAAO;gBAAAmD,SAAA,CAAAlK,IAAA;gBAAA;cAAA;cACT+G,OAAO,CAACC,QAAO,GAAI,CAACV,GAAG,EAAEC,GAAG,CAAC;cAAA2D,SAAA,CAAAlK,IAAA;cAAA,OACvBkD,SAAS,CAACH,GAAG,CAACD,EAAE,EAAE,OAAO,EAAES,MAAM,CAAC/G,KAAK,CAAC,EAAE;gBAAEiK,KAAK,EAAE4C;cAAS,CAAC,CAAC;YAAA;cACpEnF,YAAW,GAAI,IAAI;cACnB0F,wBAAwB,CAAC,CAAC;cAC1B/B,eAAe,CAAC,CAAC;cACjB/D,eAAe,CAACtH,KAAI,GAAI,IAAI,EAAE;YAAA;YAAA;cAAA,OAAA0N,SAAA,CAAApI,IAAA;UAAA;QAAA,GAAAkI,QAAA;MAAA,CAEjC;MAAA,gBAjBKhB,iBAAgBA,CAAAqB,GAAA,EAAAC,GAAA;QAAA,OAAAP,KAAA,CAAAvH,KAAA,OAAAD,SAAA;MAAA;IAAA,GAiBrB;;IAED;IACA,IAAMqH,wBAAuB,GAAI,SAA3BA,wBAAuBA,CAAA,EAAU;MACrC5F,UAAU,CAACxH,KAAI,GAAIyH,YAAW,IAAKC,YAAY;IACjD,CAAC;;IAED;IACA,IAAMqG,OAAM;MAAA,IAAAC,KAAA,GAAAlI,iBAAA,eAAAxG,mBAAA,GAAAoF,IAAA,CAAI,SAAAuJ,SAAA;QAAA,IAAApB,QAAA,EAAAqB,kBAAA,EAAAC,eAAA;QAAA,OAAA7O,mBAAA,GAAAuB,IAAA,UAAAuN,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAlJ,IAAA,GAAAkJ,SAAA,CAAA7K,IAAA;YAAA;cACdiE,YAAW,GAAI,KAAK;cACpBC,YAAW,GAAI,KAAK;cACpBF,UAAU,CAACxH,KAAI,GAAI,KAAK;cAElB6M,QAAO,GAAAM,aAAA,KAASjG,QAAQ,CAAClH,KAAK,CAACiK,KAAI;cACnCiE,kBAAiB,GAAIhH,QAAQ,CAAClH,KAAK,CAACsO,OAAO,CAACC,OAAO,CAACrH,QAAQ,CAAClH,KAAK,CAACgJ,IAAI,CAAC;cACxEmF,eAAc,GAAI,CAACD,kBAAiB,GAAI,CAAC,IAAIhH,QAAQ,CAAClH,KAAK,CAACsO,OAAO,CAACjK,MAAM;cAChFwI,QAAQ,CAAC7D,IAAG,GAAI9B,QAAQ,CAAClH,KAAK,CAACsO,OAAO,CAACH,eAAe,CAAC;cAAAE,SAAA,CAAA7K,IAAA;cAAA,OAEjDkD,SAAS,CAACH,GAAG,CAACD,EAAE,EAAE,OAAO,EAAES,MAAM,CAAC/G,KAAK,CAAC,EAAE;gBAAEiK,KAAK,EAAE4C;cAAS,CAAC,CAAC;YAAA;cACpEpE,yBAAyB,CAAC,CAAC;YAAA;YAAA;cAAA,OAAA4F,SAAA,CAAA/I,IAAA;UAAA;QAAA,GAAA2I,QAAA;MAAA,CAC5B;MAAA,gBAZKF,OAAMA,CAAA;QAAA,OAAAC,KAAA,CAAAhI,KAAA,OAAAD,SAAA;MAAA;IAAA,GAYX;IAED,OAAO;MACLgB,MAAM,EAANA,MAAM;MACNG,QAAQ,EAARA,QAAQ;MACRC,qBAAqB,EAArBA,qBAAqB;MACrBC,mBAAmB,EAAnBA,mBAAmB;MACnBO,YAAY,EAAZA,YAAY;MACZkC,YAAY,EAAZA,YAAY;MACZ4B,iBAAiB,EAAjBA,iBAAiB;MACjBS,UAAU,EAAVA,UAAU;MACV1E,UAAU,EAAVA,UAAU;MACVuG,OAAO,EAAPA;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}