{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-26084dc2\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h1\", null, \"Login\", -1 /* HOISTED */);\n});\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Login\", -1 /* HOISTED */);\n});\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers(function () {\n      return $setup.login && $setup.login.apply($setup, arguments);\n    }, [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.identifier = $event;\n    }),\n    placeholder: \"Email or Nickname\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.identifier]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.password = $event;\n    }),\n    placeholder: \"Password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _hoisted_2], 32 /* NEED_HYDRATION */), _createVNode(_component_router_link, {\n    to: \"/register\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createTextVNode(\"Don't have an account? Register\")];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","$setup","login","apply","arguments","$event","identifier","placeholder","required","password","_hoisted_2","_createVNode","_component_router_link","to","_withCtx","_createTextVNode","_"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Login</h1>\r\n    <form @submit.prevent=\"login\">\r\n      <input type=\"text\" v-model=\"identifier\" placeholder=\"Email or Nickname\" required />\r\n      <input type=\"password\" v-model=\"password\" placeholder=\"Password\" required />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n    <router-link to=\"/register\">Don't have an account? Register</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { db } from '../services/firebaseConfig';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const identifier = ref('');\r\n    const password = ref('');\r\n    const auth = getAuth();\r\n    const router = useRouter();\r\n\r\n    const login = async () => {\r\n      try {\r\n        let email = identifier.value;\r\n\r\n        // Check if the identifier is a nickname\r\n        if (!identifier.value.includes('@')) {\r\n          console.log('Looking up email for nickname:', identifier.value); // Debug log\r\n          // Search for the email associated with the nickname in Firestore\r\n          const usersRef = collection(db, 'users');\r\n          const q = query(usersRef, where('nickname', '==', identifier.value));\r\n          const querySnapshot = await getDocs(q);\r\n\r\n          if (querySnapshot.empty) {\r\n            alert('No user found with this nickname');\r\n            return;\r\n          }\r\n\r\n          // Assume the first result is the correct one (there should only be one)\r\n          email = querySnapshot.docs[0].data().email;\r\n          console.log('Found email for nickname:', email); // Debug log\r\n        }\r\n\r\n        // Authenticate the user with the found email or the provided email\r\n        await signInWithEmailAndPassword(auth, email, password.value);\r\n\r\n        alert('Login successful!');\r\n        router.push('/home'); // Redirect to home after login\r\n      } catch (error) {\r\n        alert('Login failed: ' + error.message);\r\n        console.error('Login error:', error); // Debug log\r\n      }\r\n    };\r\n\r\n    return { identifier, password, login };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles for the login form */\r\n</style>"],"mappings":";;;;;sBAEIA,mBAAA,CAAc,YAAV,OAAK;AAAA;;sBAIPA,mBAAA,CAAoC;IAA5BC,IAAI,EAAC;EAAQ,GAAC,OAAK;AAAA;;;uBAL/BC,mBAAA,CAQM,cAPJC,UAAc,EACdH,mBAAA,CAIO;IAJAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA;MAAA,OAG2BC,MAAA,CAAAC,KAAA,IAAAD,MAAA,CAAAC,KAAA,CAAAC,KAAA,CAAAF,MAAA,EAAAG,SAAA,CAAK;IAAA;sBAC1BV,mBAAA,CAAmF;IAA5EC,IAAI,EAAC,MAAM;IAJxB,uBAAAI,MAAA,QAAAA,MAAA,gBAAAM,MAAA;MAAA,OAIkCJ,MAAA,CAAAK,UAAU,GAAAD,MAAA;IAAA;IAAEE,WAAW,EAAC,mBAAmB;IAACC,QAAQ,EAAR;iDAA5CP,MAAA,CAAAK,UAAU,E,mBACtCZ,mBAAA,CAA4E;IAArEC,IAAI,EAAC,UAAU;IAL5B,uBAAAI,MAAA,QAAAA,MAAA,gBAAAM,MAAA;MAAA,OAKsCJ,MAAA,CAAAQ,QAAQ,GAAAJ,MAAA;IAAA;IAAEE,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAjCP,MAAA,CAAAQ,QAAQ,E,GACxCC,UAAoC,C,4BAEtCC,YAAA,CAAyEC,sBAAA;IAA5DC,EAAE,EAAC;EAAW;IAR/B,WAAAC,QAAA,CAQgC;MAAA,OAA+B,CAR/DC,gBAAA,CAQgC,iCAA+B,E;;IAR/DC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}