{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/images/logo.png';\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-63ae9146\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"register-container\"\n};\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Monster Mayhem Logo\",\n    \"class\": \"logo\"\n  }, null, -1 /* HOISTED */);\n});\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"button\", {\n    type: \"submit\",\n    \"class\": \"register-button\"\n  }, \"Register\", -1 /* HOISTED */);\n});\nvar _hoisted_4 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"button\", {\n    \"class\": \"login-button\"\n  }, \"Already have an account? Login\", -1 /* HOISTED */);\n});\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers(function () {\n      return $setup.register && $setup.register.apply($setup, arguments);\n    }, [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.email = $event;\n    }),\n    placeholder: \"Email\",\n    required: \"\",\n    autocomplete: \"username\",\n    \"class\": \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.password = $event;\n    }),\n    placeholder: \"Password\",\n    required: \"\",\n    autocomplete: \"new-password\",\n    \"class\": \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $setup.nickname = $event;\n    }),\n    placeholder: \"Nickname\",\n    required: \"\",\n    \"class\": \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.nickname]]), _hoisted_3], 32 /* NEED_HYDRATION */), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_hoisted_4];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","src","alt","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","$setup","register","apply","arguments","$event","email","placeholder","required","autocomplete","password","nickname","_hoisted_3","_createVNode","_component_router_link","to","_withCtx","_hoisted_4","_"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\views\\Register.vue"],"sourcesContent":["<!-- src/views/Register.vue -->\r\n<!-- Registration form with email, password, and nickname fields -->\r\n<!-- Redirects to the home page after successful registration -->\r\n<!-- Saves the nickname in Firestore -->\r\n\r\n<template>\r\n  <div class=\"register-container\">\r\n    <img src=\"@/assets/images/logo.png\" alt=\"Monster Mayhem Logo\" class=\"logo\">\r\n    <form @submit.prevent=\"register\">\r\n      <input type=\"email\" v-model=\"email\" placeholder=\"Email\" required autocomplete=\"username\" class=\"input-field\" />\r\n      <input type=\"password\" v-model=\"password\" placeholder=\"Password\" required autocomplete=\"new-password\" class=\"input-field\" />\r\n      <input type=\"text\" v-model=\"nickname\" placeholder=\"Nickname\" required class=\"input-field\" />\r\n      <button type=\"submit\" class=\"register-button\">Register</button>\r\n    </form>\r\n    <router-link to=\"/login\">\r\n      <button class=\"login-button\">Already have an account? Login</button>\r\n    </router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Import the necessary functions and objects from Firebase\r\nimport { ref } from 'vue';\r\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { doc, setDoc } from 'firebase/firestore';\r\nimport { useRouter } from 'vue-router';\r\nimport { db } from '../services/firebaseConfig';\r\n\r\nexport default {\r\n  name: 'Register',\r\n  setup() {\r\n    const email = ref('');\r\n    const password = ref('');\r\n    const nickname = ref('');\r\n    const auth = getAuth();\r\n    const router = useRouter();\r\n\r\n    const register = async () => {\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(auth, email.value, password.value);\r\n        const user = userCredential.user;\r\n\r\n        // Save the nickname in Firestore\r\n        await setDoc(doc(db, 'users', user.uid), {\r\n          email: email.value,\r\n          nickname: nickname.value,\r\n        });\r\n\r\n        alert('Registration successful!');\r\n        router.push('/home'); // Redirect to home after registration\r\n      } catch (error) {\r\n        alert('Registration failed: ' + error.message);\r\n      }\r\n    };\r\n\r\n    return { email, password, nickname, register };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  background-image: url('@/assets/images/background_mm - Copy.jpg');\r\n  background-size: cover;\r\n  background-position: center;\r\n  color: white;\r\n  text-align: center;\r\n}\r\n\r\n.logo {\r\n  width: 300px;\r\n  height: auto;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.input-field {\r\n  display: block;\r\n  width: 80%;\r\n  margin: 10px auto;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 1.2em;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  color: #333;\r\n}\r\n\r\n.register-button, .login-button {\r\n  background-color: #ff7f00;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  padding: 10px 20px;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.register-button:hover, .login-button:hover {\r\n  background-color: #ff5f00;\r\n}\r\n</style>\r\n\r\n"],"mappings":";OAOSA,UAA8B;;;;;EADhC,SAAM;AAAoB;;sBAC7BC,mBAAA,CAA2E;IAAtEC,GAA8B,EAA9BF,UAA8B;IAACG,GAAG,EAAC,qBAAqB;IAAC,SAAM;;;;sBAKlEF,mBAAA,CAA+D;IAAvDG,IAAI,EAAC,QAAQ;IAAC,SAAM;KAAkB,UAAQ;AAAA;;sBAGtDH,mBAAA,CAAoE;IAA5D,SAAM;EAAc,GAAC,gCAA8B;AAAA;;;uBAT/DI,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAA2E,EAC3EN,mBAAA,CAKO;IALAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MARjBC,cAAA;MAAA,OAQ2BC,MAAA,CAAAC,QAAA,IAAAD,MAAA,CAAAC,QAAA,CAAAC,KAAA,CAAAF,MAAA,EAAAG,SAAA,CAAQ;IAAA;sBAC7Bb,mBAAA,CAA+G;IAAxGG,IAAI,EAAC,OAAO;IATzB,uBAAAK,MAAA,QAAAA,MAAA,gBAAAM,MAAA;MAAA,OASmCJ,MAAA,CAAAK,KAAK,GAAAD,MAAA;IAAA;IAAEE,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;IAACC,YAAY,EAAC,UAAU;IAAC,SAAM;iDAAlER,MAAA,CAAAK,KAAK,E,mBAClCf,mBAAA,CAA4H;IAArHG,IAAI,EAAC,UAAU;IAV5B,uBAAAK,MAAA,QAAAA,MAAA,gBAAAM,MAAA;MAAA,OAUsCJ,MAAA,CAAAS,QAAQ,GAAAL,MAAA;IAAA;IAAEE,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;IAACC,YAAY,EAAC,cAAc;IAAC,SAAM;iDAA5ER,MAAA,CAAAS,QAAQ,E,mBACxCnB,mBAAA,CAA4F;IAArFG,IAAI,EAAC,MAAM;IAXxB,uBAAAK,MAAA,QAAAA,MAAA,gBAAAM,MAAA;MAAA,OAWkCJ,MAAA,CAAAU,QAAQ,GAAAN,MAAA;IAAA;IAAEE,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;IAAC,SAAM;iDAAhDP,MAAA,CAAAU,QAAQ,E,GACpCC,UAA+D,C,4BAEjEC,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAQ;IAd5B,WAAAC,QAAA,CAeM;MAAA,OAAoE,CAApEC,UAAoE,C;;IAf1EC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}