{"ast":null,"code":"function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nexport default {\n  name: 'GameBoard',\n  props: {\n    state: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    handleClick: function handleClick(index) {\n      // Logica para movimentar monstro\n      // Emita o movimento de volta para Game.vue\n      this.$emit('move', _defineProperty({}, index, this.$root.currentPlayer));\n    }\n  }\n};","map":{"version":3,"names":["name","props","state","type","Object","required","methods","handleClick","index","$emit","_defineProperty","$root","currentPlayer"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\components\\GameBoard.vue"],"sourcesContent":["<!-- src/components/GameBoard.vue -->\n<!-- This is the game board component where players can make moves during the game. -->\n\n<template>\n  <div class=\"board\">\n    <div v-for=\"(cell, index) in state.monsters\" :key=\"index\" @click=\"handleClick(index)\">\n      {{ cell.type }} at {{ cell.position }}\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GameBoard',\n  props: {\n    state: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    handleClick(index) {\n      // Logica para movimentar monstro\n      // Emita o movimento de volta para Game.vue\n      this.$emit('move', { [index]: this.$root.currentPlayer });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.board {\n  /* Styles for the game board */\n}\n</style>"],"mappings":";;;;AAYA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAW,WAAAA,YAACC,KAAK,EAAE;MACjB;MACA;MACA,IAAI,CAACC,KAAK,CAAC,MAAM,EAAAC,eAAA,KAAKF,KAAK,EAAG,IAAI,CAACG,KAAK,CAACC,aAAY,CAAG,CAAC;IAC3D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}