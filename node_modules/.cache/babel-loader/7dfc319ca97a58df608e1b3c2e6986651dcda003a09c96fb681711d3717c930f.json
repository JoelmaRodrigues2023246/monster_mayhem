{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-3614b62c\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h1\", null, \"Game\", -1 /* HOISTED */);\n});\nvar _hoisted_2 = {\n  key: 0\n};\nvar _hoisted_3 = {\n  key: 1\n};\nvar _hoisted_4 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"Loading game...\", -1 /* HOISTED */);\n});\nvar _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $setup.game ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"Current Turn: \" + _toDisplayString($setup.game.turn), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Game State: \" + _toDisplayString($setup.game.state), 1 /* TEXT */), _createCommentVNode(\" Render the game board or other game elements based on game.state \")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [].concat(_hoisted_5)))]);\n}","map":{"version":3,"names":["_createElementVNode","key","_hoisted_4","_createElementBlock","_hoisted_1","$setup","game","_hoisted_2","_toDisplayString","turn","state","_createCommentVNode","_hoisted_3","concat","_hoisted_5"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\views\\Game.vue"],"sourcesContent":["<!-- src/views/Game.vue -->\r\n<template>\r\n    <div>\r\n      <h1>Game</h1>\r\n      <div v-if=\"game\">\r\n        <p>Current Turn: {{ game.turn }}</p>\r\n        <p>Game State: {{ game.state }}</p>\r\n        <!-- Render the game board or other game elements based on game.state -->\r\n      </div>\r\n      <div v-else>\r\n        <p>Loading game...</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted } from 'vue';\r\n  import { useRoute } from 'vue-router';\r\n  import { db } from '../services/firebaseConfig';\r\n  import { doc, getDoc, onSnapshot, updateDoc } from 'firebase/firestore';\r\n  import { getAuth } from 'firebase/auth';\r\n  \r\n  export default {\r\n    name: 'Game',\r\n    setup() {\r\n      const route = useRoute();\r\n      const auth = getAuth();\r\n      const gameId = route.params.id;\r\n      const game = ref(null);\r\n  \r\n      const loadGame = async () => {\r\n        const gameRef = doc(db, 'games', gameId);\r\n        const gameSnap = await getDoc(gameRef);\r\n  \r\n        if (gameSnap.exists()) {\r\n          game.value = gameSnap.data();\r\n  \r\n          // Listen for real-time updates to the game document\r\n          onSnapshot(gameRef, (doc) => {\r\n            game.value = doc.data();\r\n          });\r\n        } else {\r\n          alert('Game not found');\r\n        }\r\n      };\r\n  \r\n      const makeMove = async (newState) => {\r\n        if (auth.currentUser.uid === game.value.turn) {\r\n          const gameRef = doc(db, 'games', gameId);\r\n          await updateDoc(gameRef, {\r\n            state: newState,\r\n            turn: getNextPlayer(game.value.players, game.value.turn)\r\n          });\r\n        } else {\r\n          alert('It is not your turn');\r\n        }\r\n      };\r\n  \r\n      const getNextPlayer = (players, currentTurn) => {\r\n        const currentIndex = players.indexOf(currentTurn);\r\n        return players[(currentIndex + 1) % players.length];\r\n      };\r\n  \r\n      onMounted(() => {\r\n        loadGame();\r\n      });\r\n  \r\n      return {\r\n        game,\r\n        makeMove\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Styles for the game page */\r\n  </style>\r\n  "],"mappings":";;;;;sBAGMA,mBAAA,CAAa,YAAT,MAAI;AAAA;;EAHdC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;sBAUQD,mBAAA,CAAsB,WAAnB,iBAAe;AAAA;kBAAlBE,UAAsB,C;;uBAR1BC,mBAAA,CAUM,cATJC,UAAa,EACFC,MAAA,CAAAC,IAAI,I,cAAfH,mBAAA,CAIM,OARZI,UAAA,GAKQP,mBAAA,CAAoC,WAAjC,gBAAc,GAAAQ,gBAAA,CAAGH,MAAA,CAAAC,IAAI,CAACG,IAAI,kBAC7BT,mBAAA,CAAmC,WAAhC,cAAY,GAAAQ,gBAAA,CAAGH,MAAA,CAAAC,IAAI,CAACI,KAAK,kBAC5BC,mBAAA,sEAAyE,C,oBAE3ER,mBAAA,CAEM,OAXZS,UAAA,KAAAC,MAAA,CAAAC,UAAA,I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}