{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"lobby\"\n};\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Lobby\", -1 /* HOISTED */);\nvar _hoisted_3 = {\n  key: 0\n};\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Players:\", -1 /* HOISTED */);\nvar _hoisted_5 = {\n  key: 0\n};\nvar _hoisted_6 = {\n  key: 1\n};\nvar _hoisted_7 = {\n  key: 1\n};\nvar _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Loading lobby...\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(\"    \"), _createElementVNode(\"div\", _hoisted_1, [_createTextVNode(\"      \"), _hoisted_2, _createTextVNode(\"      \"), $setup.lobby ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createTextVNode(\"        \"), _createElementVNode(\"p\", null, \"Host: \" + _toDisplayString($setup.hostNickname), 1 /* TEXT */), _createTextVNode(\"        \"), _hoisted_4, _createTextVNode(\"        \"), _createElementVNode(\"ul\", null, [_createTextVNode(\"          \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.playerNicknames, function (player, index) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, \"           \" + _toDisplayString(player) + \"          \", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createTextVNode(\"        \")]), _createTextVNode(\"        \"), $setup.lobby.players.length < 4 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"Waiting for more players to join...\")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"Ready to start the game!\")), _createTextVNode(\"       \"), $setup.showStartButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.startGame && $setup.startGame.apply($setup, arguments);\n    })\n  }, \"         Start Game        \")) : _createCommentVNode(\"v-if\", true), _createTextVNode(\"       \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $setup.copyLobbyLink && $setup.copyLobbyLink.apply($setup, arguments);\n    })\n  }, \"Copy Lobby Code\"), _createTextVNode(\"      \")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createTextVNode(\"        \"), _hoisted_8, _createTextVNode(\"      \")])), _createTextVNode(\"    \")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_Fragment","_createTextVNode","_hoisted_1","_hoisted_2","$setup","lobby","_hoisted_3","_toDisplayString","hostNickname","_hoisted_4","_renderList","playerNicknames","player","index","players","length","_hoisted_5","_hoisted_6","showStartButton","onClick","_cache","startGame","apply","arguments","_createCommentVNode","copyLobbyLink","_hoisted_7","_hoisted_8"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\views\\Login.vue"],"sourcesContent":["<!--src/views/Login.vue-->\r\n<!-- Login form with email or nickname and password fields -->\r\n<!-- Redirects to the home page after successful login -->\r\n\r\n<template>\r\n    \r\n  <div class=\"lobby\">\r\n        \r\n    <h1>Lobby</h1>\r\n        \r\n    <div v-if=\"lobby\">\r\n            \r\n      <p>Host: {{ hostNickname }}</p>\r\n            \r\n      <p>Players:</p>\r\n            \r\n      <ul>\r\n                \r\n        <li v-for=\"(player, index) in playerNicknames\" :key=\"index\">\r\n                    {{ player }}         \r\n        </li>\r\n              \r\n      </ul>\r\n            \r\n      <p v-if=\"lobby.players.length < 4\">Waiting for more players to join...</p>\r\n            \r\n      <p v-else>Ready to start the game!</p>\r\n            <button v-if=\"showStartButton\" @click=\"startGame\">\r\n                Start Game       \r\n      </button>\r\n            <button @click=\"copyLobbyLink\">Copy Lobby Code</button>     \r\n    </div>\r\n        \r\n    <div v-else>\r\n            \r\n      <p>Loading lobby...</p>\r\n          \r\n    </div>\r\n      \r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport { ref, onMounted, onBeforeUnmount } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { db } from \"../services/firebaseConfig\";\r\nimport {\r\n  doc,\r\n  onSnapshot,\r\n  arrayUnion,\r\n  updateDoc,\r\n  deleteDoc,\r\n  addDoc,\r\n  collection,\r\n} from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { updateLobby, getUserNicknameById } from \"../services/firebaseService\";\r\n\r\nexport default {\r\n  name: \"Lobby\",\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    const auth = getAuth();\r\n    const lobbyId = route.params.id;\r\n    const lobby = ref(null);\r\n    const isHost = ref(false);\r\n    const hostNickname = ref(\"\");\r\n    const playerNicknames = ref([]);\r\n    const showStartButton = ref(false);\r\n\r\n    const loadLobby = async () => {\r\n      const lobbyRef = doc(db, \"lobbies\", lobbyId);\r\n      onSnapshot(lobbyRef, async (doc) => {\r\n        if (doc.exists()) {\r\n          lobby.value = doc.data(); // Check if the current user is the host\r\n\r\n          isHost.value = auth.currentUser.uid === lobby.value.host; // Fetch nicknames for the host and players\r\n\r\n          hostNickname.value = await getUserNicknameById(lobby.value.host);\r\n          playerNicknames.value = await Promise.all(\r\n            lobby.value.players.map((playerId) => getUserNicknameById(playerId))\r\n          ); // Add the current player to the lobby if not already added\r\n\r\n          if (!lobby.value.players.includes(auth.currentUser.uid)) {\r\n            await updateLobby(lobbyId, {\r\n              players: arrayUnion(auth.currentUser.uid),\r\n            });\r\n          } // Check if ready to start the game\r\n\r\n          showStartButton.value =\r\n            isHost.value && lobby.value.players.length === 4;\r\n        } else {\r\n          alert(\"Lobby does not exist anymore.\");\r\n          router.push(\"/multiplayer-options\");\r\n        }\r\n      });\r\n    }; // Start the game\r\n\r\n    const startGame = async () => {\r\n      try {\r\n        const gameRef = await addDoc(collection(db, \"games\"), {\r\n          host: lobby.value.host,\r\n          players: lobby.value.players,\r\n          state: {}, // Initial game state\r\n          turn: lobby.value.players[0],\r\n        });\r\n\r\n        await updateLobby(lobbyId, {\r\n          status: \"in-game\",\r\n          gameId: gameRef.id,\r\n        }); // Direct all players to the game page\r\n\r\n        lobby.value.players.forEach(async (playerId) => {\r\n          const playerRef = doc(db, \"users\", playerId);\r\n          await updateDoc(playerRef, {\r\n            currentGame: gameRef.id,\r\n          });\r\n        }); // Ensure the host is redirected to the game page\r\n\r\n        setTimeout(() => {\r\n          router.push(`/game/${gameRef.id}`);\r\n        }, 1000); // Add a slight delay to ensure all updates are propagated\r\n      } catch (error) {\r\n        console.error(\"Error starting game:\", error);\r\n      }\r\n    };\r\n\r\n    const copyLobbyLink = () => {\r\n      const link = lobbyId;\r\n      navigator.clipboard.writeText(link).then(() => {\r\n        alert(\"Lobby link copied to clipboard\");\r\n      });\r\n    };\r\n\r\n    const handleBeforeUnload = (event) => {\r\n      if (isHost.value) {\r\n        event.preventDefault();\r\n        event.returnValue = \"\";\r\n      }\r\n    };\r\n\r\n    const handleLeaveLobby = async () => {\r\n      if (isHost.value) {\r\n        if (\r\n          confirm(\r\n            \"If you leave, the lobby will be deleted. Do you want to proceed?\"\r\n          )\r\n        ) {\r\n          await deleteDoc(doc(db, \"lobbies\", lobbyId));\r\n          router.push(\"/multiplayer-options\");\r\n        }\r\n      } else {\r\n        router.push(\"/multiplayer-options\");\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadLobby();\r\n      window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    });\r\n\r\n    return {\r\n      lobby,\r\n      isHost,\r\n      hostNickname,\r\n      playerNicknames,\r\n      showStartButton,\r\n      startGame,\r\n      copyLobbyLink,\r\n      handleLeaveLobby,\r\n    };\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    const auth = getAuth();\r\n    const isHost = auth.currentUser && auth.currentUser.uid === this.lobby.host;\r\n\r\n    if (isHost) {\r\n      if (\r\n        confirm(\r\n          \"If you leave, the lobby will be deleted. Do you want to proceed?\"\r\n        )\r\n      ) {\r\n        deleteDoc(doc(db, \"lobbies\", this.$route.params.id)).then(() => {\r\n          next();\r\n        });\r\n      } else {\r\n        next(false);\r\n      }\r\n    } else {\r\n      next();\r\n    }\r\n  },\r\n};\r\n</script>  \r\n"],"mappings":";;EAMO,SAAM;AAAO;8BAEhBA,mBAAA,CAAc,YAAV,OAAK;;EARbC,GAAA;AAAA;8BAcMD,mBAAA,CAAe,WAAZ,UAAQ;;EAdjBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;8BAmCMD,mBAAA,CAAuB,WAApB,kBAAgB;;uBAnCzBE,mBAAA,CAAAC,SAAA,SAAAC,gBAAA,CAIU,MAER,GAAAJ,mBAAA,CAiCM,OAjCNK,UAiCM,GAvCRD,gBAAA,CAMqB,QAEjB,GAAAE,UAAc,EARlBF,gBAAA,CAQkB,QAEd,GAAWG,MAAA,CAAAC,KAAK,I,cAAhBN,mBAAA,CAqBM,OA/BVO,UAAA,GAAAL,gBAAA,CAUsB,UAEhB,GAAAJ,mBAAA,CAA+B,WAA5B,QAAM,GAAAU,gBAAA,CAAGH,MAAA,CAAAI,YAAY,kBAZ9BP,gBAAA,CAYqC,UAE/B,GAAAQ,UAAe,EAdrBR,gBAAA,CAcqB,UAEf,GAAAJ,mBAAA,CAMK,aAtBXI,gBAAA,CAgBU,YAEF,I,kBAAAF,mBAAA,CAEKC,SAAA,QApBbU,WAAA,CAkBsCN,MAAA,CAAAO,eAAe,EAlBrD,UAkBoBC,MAAM,EAAEC,KAAK;yBAAzBd,mBAAA,CAEK;MAF2CD,GAAG,EAAEe;IAAK,GAAE,aAChD,GAAAN,gBAAA,CAAGK,MAAM,IAAG,YACxB;kCApBRX,gBAAA,CAoBa,UAEP,E,GAtBNA,gBAAA,CAsBW,UAEL,GAASG,MAAA,CAAAC,KAAK,CAACS,OAAO,CAACC,MAAM,Q,cAA7BhB,mBAAA,CAA0E,KAxBhFiB,UAAA,EAwByC,qCAAmC,M,cAEtEjB,mBAAA,CAAsC,KA1B5CkB,UAAA,EA0BgB,0BAAwB,IA1BxChB,gBAAA,CA0B4C,SAChC,GAAcG,MAAA,CAAAc,eAAe,I,cAA7BnB,mBAAA,CAEG;IA7BfD,GAAA;IA2B4CqB,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEhB,MAAA,CAAAiB,SAAA,IAAAjB,MAAA,CAAAiB,SAAA,CAAAC,KAAA,CAAAlB,MAAA,EAAAmB,SAAA,CAAS;IAAA;KAAE,6BAExD,KA7BNC,mBAAA,gBAAAvB,gBAAA,CA6Be,SACH,GAAAJ,mBAAA,CAAuD;IAA9CsB,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEhB,MAAA,CAAAqB,aAAA,IAAArB,MAAA,CAAAqB,aAAA,CAAAH,KAAA,CAAAlB,MAAA,EAAAmB,SAAA,CAAa;IAAA;KAAE,iBAAe,GA9B1DtB,gBAAA,CA8BmE,QAC/D,E,oBAEAF,mBAAA,CAIM,OArCV2B,UAAA,GAAAzB,gBAAA,CAiCgB,UAEV,GAAA0B,UAAuB,EAnC7B1B,gBAAA,CAmC6B,QAEzB,E,IArCJA,gBAAA,CAqCU,MAER,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}