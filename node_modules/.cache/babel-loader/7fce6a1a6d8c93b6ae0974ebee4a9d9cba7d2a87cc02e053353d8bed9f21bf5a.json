{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-4db471e8\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h1\", null, \"Lobby\", -1 /* HOISTED */);\n});\nvar _hoisted_2 = {\n  key: 0\n};\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"Players:\", -1 /* HOISTED */);\n});\nvar _hoisted_4 = [\"href\"];\nvar _hoisted_5 = {\n  key: 1\n};\nvar _hoisted_6 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"Loading lobby...\", -1 /* HOISTED */);\n});\nvar _hoisted_7 = [_hoisted_6];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $setup.lobby ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"Host: \" + _toDisplayString($setup.lobby.host), 1 /* TEXT */), _hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.lobby.players, function (player) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: player\n    }, _toDisplayString(player), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), $setup.isHost ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $setup.startGame && $setup.startGame.apply($setup, arguments);\n    })\n  }, \"Start Game\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, [_createTextVNode(\"Share this link with your friends: \"), _createElementVNode(\"a\", {\n    href: $setup.lobbyLink\n  }, _toDisplayString($setup.lobbyLink), 9 /* TEXT, PROPS */, _hoisted_4)]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $setup.copyLobbyLink && $setup.copyLobbyLink.apply($setup, arguments);\n    })\n  }, \"Copy Lobby Link\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [].concat(_hoisted_7)))]);\n}","map":{"version":3,"names":["_createElementVNode","key","_hoisted_6","_createElementBlock","_hoisted_1","$setup","lobby","_hoisted_2","_toDisplayString","host","_hoisted_3","_Fragment","_renderList","players","player","isHost","onClick","_cache","startGame","apply","arguments","_createCommentVNode","_createTextVNode","href","lobbyLink","_hoisted_4","copyLobbyLink","_hoisted_5","concat","_hoisted_7"],"sources":["F:\\CCT\\2 SEMESTER\\Concurrent_Systems\\CA2\\project-framework\\monster_mayhem\\src\\views\\Lobby.vue"],"sourcesContent":["<!-- src/views/Lobby.vue -->\r\n<!-- This is the lobby page where players can see the host and other players in the lobby. -->\r\n<!-- The host can start the game from this page. -->\r\n\r\n<template>\r\n  <div>\r\n    <h1>Lobby</h1>\r\n    <div v-if=\"lobby\">\r\n      <p>Host: {{ lobby.host }}</p>\r\n      <p>Players:</p>\r\n      <ul>\r\n        <li v-for=\"player in lobby.players\" :key=\"player\">{{ player }}</li>\r\n      </ul>\r\n      <button v-if=\"isHost\" @click=\"startGame\">Start Game</button>\r\n      <p>Share this link with your friends: <a :href=\"lobbyLink\">{{ lobbyLink }}</a></p>\r\n      <button @click=\"copyLobbyLink\">Copy Lobby Link</button>\r\n    </div>\r\n    <div v-else>\r\n      <p>Loading lobby...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { db } from '../services/firebaseConfig';\r\nimport { doc, getDoc, updateDoc, arrayUnion } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nexport default {\r\n  name: 'Lobby',\r\n  setup() {\r\n    const route = useRoute();\r\n    const auth = getAuth();\r\n    const lobbyId = route.params.id;\r\n    const lobby = ref(null);\r\n    const isHost = ref(false);\r\n    const lobbyLink = ref('');\r\n\r\n    const loadLobby = async () => {\r\n      const lobbyRef = doc(db, 'lobbies', lobbyId);\r\n      const lobbySnap = await getDoc(lobbyRef);\r\n\r\n      if (lobbySnap.exists()) {\r\n        lobby.value = lobbySnap.data();\r\n        lobbyLink.value = `${window.location.origin}/lobby/${lobbyId}`;\r\n\r\n        // Check if the current user is the host\r\n        isHost.value = auth.currentUser.uid === lobby.value.host;\r\n\r\n        // Add the current player to the lobby if not already added\r\n        if (!lobby.value.players.includes(auth.currentUser.uid)) {\r\n          await updateDoc(lobbyRef, {\r\n            players: arrayUnion(auth.currentUser.uid)\r\n          });\r\n          lobby.value.players.push(auth.currentUser.uid);\r\n        }\r\n      }\r\n    };\r\n\r\n    const startGame = async () => {\r\n      // Implement game start logic here\r\n    };\r\n\r\n    const copyLobbyLink = () => {\r\n      navigator.clipboard.writeText(lobbyLink.value)\r\n        .then(() => {\r\n          alert('Lobby link copied to clipboard');\r\n        })\r\n        .catch(err => {\r\n          console.error('Failed to copy lobby link: ', err);\r\n        });\r\n    };\r\n\r\n    onMounted(() => {\r\n      loadLobby();\r\n    });\r\n\r\n    return {\r\n      lobby,\r\n      isHost,\r\n      startGame,\r\n      lobbyLink,\r\n      copyLobbyLink\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles for the lobby page */\r\n</style>"],"mappings":";;;;;sBAMIA,mBAAA,CAAc,YAAV,OAAK;AAAA;;EANbC,GAAA;AAAA;;sBASMD,mBAAA,CAAe,WAAZ,UAAQ;AAAA;iBATjB;;EAAAC,GAAA;AAAA;;sBAkBMD,mBAAA,CAAuB,WAApB,kBAAgB;AAAA;kBAAnBE,UAAuB,C;;uBAb3BC,mBAAA,CAeM,cAdJC,UAAc,EACHC,MAAA,CAAAC,KAAK,I,cAAhBH,mBAAA,CASM,OAhBVI,UAAA,GAQMP,mBAAA,CAA6B,WAA1B,QAAM,GAAAQ,gBAAA,CAAGH,MAAA,CAAAC,KAAK,CAACG,IAAI,kBACtBC,UAAe,EACfV,mBAAA,CAEK,c,kBADHG,mBAAA,CAAmEQ,SAAA,QAX3EC,WAAA,CAW6BP,MAAA,CAAAC,KAAK,CAACO,OAAO,EAX1C,UAWmBC,MAAM;yBAAjBX,mBAAA,CAAmE;MAA9BF,GAAG,EAAEa;IAAM,GAAAN,gBAAA,CAAKM,MAAM;oCAE/CT,MAAA,CAAAU,MAAM,I,cAApBZ,mBAAA,CAA4D;IAblEF,GAAA;IAa6Be,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEZ,MAAA,CAAAa,SAAA,IAAAb,MAAA,CAAAa,SAAA,CAAAC,KAAA,CAAAd,MAAA,EAAAe,SAAA,CAAS;IAAA;KAAE,YAAU,KAbzDC,mBAAA,gBAcMrB,mBAAA,CAAkF,YAdxFsB,gBAAA,CAcS,qCAAmC,GAAAtB,mBAAA,CAAwC;IAApCuB,IAAI,EAAElB,MAAA,CAAAmB;EAAS,GAAAhB,gBAAA,CAAKH,MAAA,CAAAmB,SAAS,wBAd7EC,UAAA,E,GAeMzB,mBAAA,CAAuD;IAA9CgB,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEZ,MAAA,CAAAqB,aAAA,IAAArB,MAAA,CAAAqB,aAAA,CAAAP,KAAA,CAAAd,MAAA,EAAAe,SAAA,CAAa;IAAA;KAAE,iBAAe,E,oBAEhDjB,mBAAA,CAEM,OAnBVwB,UAAA,KAAAC,MAAA,CAAAC,UAAA,I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}